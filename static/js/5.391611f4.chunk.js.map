{"version":3,"sources":["controllers/engines/ConditionEngine.js","components/drawers/ConditionEditor.js","components/drawers/NewStory.js","controllers/AppValidationsController.js","controllers/ImportExportStoryController.js","components/AppNav.js","components/StoryTitle.js","images/jake-reading.png","components/pages/EmptyProjectPage.js","components/drawers/AddCustomEntity.js","components/drawers/EditColors.js","components/entity_views/GameStateListItem.js","components/entity_views/EntitySelectorView.js","components/drawers/AddEditGameStateProp.js","components/sections/GameStateConfigSection.js","components/entity_views/LocationView.js","components/drawers/AddEditLocation.js","components/drawers/AddEditArea.js","components/drawers/EditLocationMap.js","components/sections/LocationConfigSection.js","components/entity_views/CharacterView.js","components/drawers/AddEditCharacter.js","components/sections/CharacterConfigSection.js","components/entity_views/SimpleEntityView.js","components/drawers/AddEditCustomEntity.js","components/sections/CustomEntityConfigSection.js","components/pages/ConfigPage.js","components/entity_views/ActView.js","components/entity_views/ChapterView.js","components/drawers/AddEditChapter.js","components/drawers/AddEditAct.js","components/sections/StorylineSection.js","components/entity_views/SequencedActionListItem.js","components/drawers/AddEditSequencedAction.js","components/sections/SequenceActionsSection.js","utils/EditorUtils.js","utils/ConditionEditorUtils.js","components/drawers/AddEditSingleGameAction.js","components/sections/NavigationActionsSection.js","components/sections/InteractiveActionsSection.js","components/sections/NoEffectActionsSection.js","components/entity_views/DialogListItem.js","components/entity_views/ConversationView.js","components/drawers/AddEditConversation.js","components/drawers/AddEditConversationDialog.js","components/sections/ConversationsSection.js","components/entity_views/ComplexConditionExpressionListItem.js","components/pages/StoryPage.js","components/PlayActions.js","components/sections/PlaytestConfigurationSection.js","components/sections/StoryValidationSection.js","components/pages/PlayModePage.js","AppLayout.js","App.js"],"names":["ConditionEngine","validateComplexCondition","conditionParts","expressions","testingCondition","this","buildExpressionFromParts","eval","error","parts","forTesting","expression","forEach","part","type","push","name","join","engine","NewStory","isDrawerVisible","onDrawerClose","useContext","AppContext","dispatch","Form","useForm","form","useState","visible","setVisible","title","setTitle","version","setVersion","useEffect","resetFields","openDrawer","closeDrawer","width","onClose","bodyStyle","paddingBottom","footer","style","textAlign","onClick","marginRight","htmlType","layout","id","onFinish","values","trim","message","data","AppLogicController","createNewStory","then","result","success","catch","requiredMark","gutter","span","Item","label","rules","required","placeholder","value","onChange","e","target","AppValidationsController","setTimeout","testNames","dbTable","invalidNames","db","transaction","a","where","first","undefined","length","Promise","resolve","reject","entityDefId","custom_entities","custom_entity_def_id","ImportExportStoryController","progressCallback","errorCallback","stories","equals","story","d","Date","date","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","fileName","replaceAll","exportDB","prettyJson","blob","download","file","successCallback","isOpen","delete","open","importInto","acceptMissingTables","acceptVersionDiff","acceptNameDiff","acceptChangedPrimaryKey","payload","console","log","url","r","fetch","response","status","Sider","Layout","AppNav","state","collapsed","setCollapsed","shouldRenderMenu","setShouldRenderMenu","newStoryVisible","setNewStoryVisible","document","getElementById","addEventListener","readStoryFile","storyLoaded","loadStory","click","clearStoryTest","devStartOver","files","loadStoryFromFile","importStoryProgressCallback","importStorySuccessCallback","totalRows","completedRows","toggleNav","handleClick","key","verifyStoryRunnable","loadSample","sampleUrl","loadStoryFromUrl","importSampleProgressCallback","importSampleSuccessCallback","className","collapsible","onCollapse","src","logo","alt","theme","mode","defaultSelectedKeys","disabled","icon","SettingFilled","BookFilled","CaretRightOutlined","marginLeft","marginTop","block","PlusOutlined","marginBottom","onConfirm","onCancel","okText","cancelText","placement","UploadOutlined","accept","display","DownloadOutlined","downloadStory","DeleteFilled","content","trigger","RocketOutlined","renderLoadSamples","BugOutlined","Header","Title","Typography","Text","StoryTitle","useLiveQuery","level","Content","EmptyProjectPage","jake_reading","AddCustomEntity","singular","createNewCustomEntityDef","toLowerCase","replace","setFieldsValue","readOnly","EditColors","newDefaultColors","setNewDefaultColors","newCustomColors","setNewCustomColors","saveSucceed","setSaveSucceed","customEntityDefs","custom_entity_defs","toArray","defaultEntityColors","default_entity_colors","Object","keys","updateDefaultEntityColor","parseInt","updateCustomEntityDefColor","dataSource","renderItem","item","textTransform","animation","enableAlpha","color","colors","newColors","setDefaultEntityColor","margin","setCustomEntityColor","GameStateListItem","defaultValue","gameState","onEditGameStateProp","onRemoveGameStateProp","endsWith","default","edit_mode","size","removable","Option","Select","EntitySelectorView","entityType","onChangeCallback","emptyOption","emptyOptionLabel","customFetch","customFetchParams","entities","setEntities","nameProp","setNameProp","fetchCustomEntities","AppDataFetchController","fetchStoryEntities","fetchedEntities","fetchAreasByLocation","locationId","fetchSequencedActs","find","entity","map","TextArea","Input","AddEditGameStateProp","gameStateProp","setName","setType","defaultValueInt","setDefaultValueInt","defaultValueBool","setDefaultValueBool","defaultValueString","setDefaultValueString","defaultValueEntity","setDefaultValueEntity","defaultValueEntityName","setDefaultValueEntityName","defaultValueArray","setDefaultValueArray","valuesArray","split","unquotedEntries","entry","slice","default_tids","populateDefault","displaySingleLineDefaultField","displaySingleEntityDefaultField","arrayFieldLabelAndPlaceholder","singular_name","valudateArrayTypes","defaultValues","saveGameStateProp","integerValue","Number","isInteger","booleanValue","validateEntityNames","locations","invalidLocations","areas","invalidAreas","characters","invalidCharacters","customEntityDef","validateCustomEntityNames","invalidEntities","defaults","getDefaultValue","newData","editMode","createNewGameStateProp","editData","updateGameStateProp","quotesWrappedEntries","table","defaultTable","defaultTids","isDefaultDisabled","indexOf","isNameDisabled","isTypeDisabled","checkedChildren","unCheckedChildren","checked","defaultChecked","n","rows","GameStateConfigSection","addEditGameStatePropVisible","setAddEditGameStatePropVisible","currentGameStateProp","setCurrentGameStateProp","gameStates","game_state_props","header","strong","maxWidth","deleteGameStateProp","LocationView","location","canEdit","canRemove","onRemove","onEdit","onEditMap","onAddArea","onEditArea","onRemoveArea","options","extra","headStyle","background","description","area","EnvironmentFilled","AddEditLocation","setDescription","createNewLocation","updateLocation","DefaultColor","AddEditArea","setColor","location_id","createNewArea","updateArea","EditLocationMap","setOrErase","setSetOrErase","currentArea","setCurrentArea","locationAreas","setLocationAreas","currentMap","setCurrentMap","locationMapDimension","LocationMapUtils","getLocationMapDimension","convertJsonMapToEditableObject","loadAreas","fetchedAreas","handleMapClick","newMap","dataset","col","row","position","setMapTile","assign","convertEditableObjectToJsonMap","updateLocationMap","areaId","selectCurrentArea","columns","reduce","mapClasses","y","x","backgroundColor","renderMap","LocationConfigSection","addEditLocationVisible","setAddEditLocationVisible","editLocationMapVisible","setEditLocationMapVisible","addEditAreaVisible","setAddEditAreaVisible","currentLocation","setCurrentLocation","deleteLocation","removeLocation","editLocation","editLocationMap","addArea","editArea","deleteArea","removeArea","CharacterView","character","is_pc","iconAndTitle","StarFilled","AddEditCharacter","isPC","setIsPC","createNewCharacter","updateCharacter","CharacterConfigSection","addEditCharacterVisible","setAddEditCharacterVisible","currentCharacter","setCurrentCharacter","deleteCharacter","removeCharacter","editCharacter","SimpleEntityView","entityName","AddEditCustomEntity","entityDef","singularCapitalized","charAt","toUpperCase","createNewCustomEntity","updateCustomEntity","CustomEntityConfigSection","addEditCustomEntityVisible","setAddEditCustomEntityVisible","currentCustomEntity","setCurrentCustomEntity","deleteCustomEntityDef","danger","deleteCustomEntity","removeEntity","editEntity","TabPane","Tabs","ConfigPage","addCustomEntityVisible","setAddCustomEntityVisible","editColorsVisible","setEditColorsVisible","addCustomEntityButton","PlusSquareOutlined","buttons","BgColorsOutlined","tabBarExtraContent","tab","index","ActView","act","actIndex","totalActs","onMoveOrderUp","onMoveOrderDown","CaretUpOutlined","CaretDownOutlined","order","Panel","Collapse","ChapterView","chapter","chapterIndex","totalChapters","onAddAct","onEditAct","onRemoveAct","acts","actsCollapseHeader","defaultActiveKey","ghost","sort","b","orderInfo","oldOrder","chapter_id","updateActOrder","moveActUp","moveActDown","AddEditChapter","setChapterIndex","createNewChapter","updateChapter","AddEditAct","setActIndex","actType","setActType","createNewAct","updateAct","initialValue","Group","buttonStyle","Button","StorylineSection","onAddEditCondition","addEditChapterVisible","setAddEditChapterVisible","addEditActVisible","setAddEditActVisible","currentChapter","setCurrentChapter","currentAct","setCurrentAct","currentChapterTotalActs","setCurrentChapterTotalActs","chapters","orderBy","deleteChapter","removeChapter","editCharpter","updateChapterOrder","moveCharpterUp","moveCharpterDown","addAct","editAct","deleteAct","removeAct","SequencedActionListItem","characterId","sequencedAction","actionIndex","totalActions","onEditSequencedAction","onRemoveSequencedAction","onMoveSequencedActionUp","onMoveSequencedActionDown","text_value","character_id","AddEditSequencedAction","setActionIndex","textValue","setTextValue","sequencedActionType","setSequencedActionType","setCharacterId","actId","createNewSequencedAction","updateSequencedAction","SequenceActionsSection","sectionActive","setCharacters","currentActId","setCurrentActId","currentSequencedAction","setCurrentSequencedAction","addEditSequencedActionVisible","setAddEditSequencedActionVisible","fetchLiveAct","fetchLiveChapter","actSequencedActions","fetchLiveSequencedActionsByAct","loadCharacters","actionsHeader","justifyContent","renderActTitle","deleteSequencedAction","act_id","updateSequencedActionOrder","moveSequencedActionUp","moveSequencedActionDown","EditorUtils","propType","comparatorId","emptyExpression","gsProp","gsPropType","comp","compId","valueInputType","valueDisplay","ConditionEditorUtils","selectValue","getComparatorsForPropType","comparator","fieldValue","substring","condition","cmp","propName","AddEditSingleGameAction","gameAction","requiredCondition","setRequiredCondition","allowRepeat","setAllowRepeat","allow_repeat","required_condition","activeConditionDone","activeCondition","renderActionTypeTitle","JSON","stringify","createNewNoEffectAction","renderConditionDisplay","renderRequiredCondition","NavigationActionsSection","addEditSingleActionVisible","setAddEditSingleActionVisible","InteractiveActionsSection","NoEffectActionsSection","noeffActions","fetchLiveNoEffectActions","noeffAction","parse","deleteNoEffectAction","removeNoEffectAction","DialogListItem","dialog","dialogIndex","totalDialogs","onEditDialog","onRemoveDialog","onMoveDialogUp","onMoveDialogDown","ConversationView","conversation","onAddDialog","dialogs","fetchLiveConversationDialogs","dialogsHeader","dialogsCollapseHeader","AddEditConversation","createNewConversation","updateConversation","AddEditConversationDialog","setDialogIndex","conversationId","createNewConversationDialog","updateConversationDialog","ConversationsSection","addEditConversationVisible","setAddEditConversationVisible","addEditConversationDialogVisible","setAddEditConversationDialogVisible","currentConversation","setCurrentConversation","currentDialog","setCurrentDialog","currentConversationTotalDialogs","setCurrentConversationTotalDialogs","filterCharacterId","setFilterCharacterId","conversations","fetchLiveConversations","justify","align","deleteConversation","removeConversation","editConversation","addConversationDialog","editConversationDialog","deleteConversationDialog","removeConversationDialog","updateConversationDialogOrder","moveConversationDialogUp","moveConversationDialogDown","ComplexConditionExpressionListItem","renderGameStatePropsSelector","exp","prop","renderComparatorSelector","getInputTypeForExpression","renderValueSelector","conditionCaret","CaretLeftOutlined","ConditionEditor","setCondition","conditionType","setConditionType","validCondition","setValidCondition","getEmptyExpression","singleExpression","setSingleExpression","complexCondition","setComplexCondition","complexConditionExpressions","setComplexConditionExpressions","setGameStates","fetchGameStateProps","fetchedGameStateProps","resetEditor","fillConditionValues","fillSingleCondition","fillComplexCondition","condExpression","gsp_id","newComplexConditionExpressions","logic_func","handleComplexCondExpressionChange","findIndex","complexConditionButtonClicked","newCondition","newExp","removed","pop","validateExpression","isNaN","buildExpressions","buildDisplayCondition","getComparatorName","displayExp","condExp","displayName","complexConditionExpressionsHeader","height","hasExpressions","validExpressions","allExpressionsValid","conditionValid","tabPosition","activeKey","complexConditionRender","element","renderComplexCondition","StoryPage","conditionEditorVisible","setConditionEditorVisible","setTab","addEditCondition","PlayActions","shouldRenderPlayMessage","setShouldRenderPlayMessage","storyVerifyingRunnable","playMessage","LoadingOutlined","storyRunnable","renderPlayMessage","startNewPlayTestRun","searchParams","URLSearchParams","set","window","href","newWindow","opener","Paragraph","PlaytestConfigurationSection","groupPlayerInventory","setGroupPlayerInventory","showAchievements","setShowAchievements","flex","StoryValidationSection","PlayModePage","shouldRenderTabTitle","setShouldRenderTabTitle","statusIcon","CheckCircleOutlined","CloseCircleOutlined","renderValidationTabTitle","AppLayout","checkDatabaseOk","checkStoryLoaded","initialCheckDone","globalLoading","databaseLoadError","paddingTop","storyLoadError","storyErrorMessage","currentPage","page","React","createElement","App","AppStore"],"mappings":"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","file":"static/js/5.391611f4.chunk.js","sourcesContent":["\nclass ConditionEngine {\n  // constructor() {\n  //   //console.log('||--A ConditionEngine is created, load stuff, etc');\n  //   //this.gsProps = [];\n  // }\n  // test\n\n  validateComplexCondition(conditionParts, expressions) {\n    const testingCondition = this.buildExpressionFromParts(conditionParts, true);\n    try {\n      eval(testingCondition); // eslint-disable-line\n      return true;\n    } catch(error){\n      return false;\n    }\n  }\n\n  buildExpressionFromParts(parts, forTesting = false) {\n    let expression = [];\n    parts.forEach(part => {\n      switch(part.type){\n        case 'exp':\n          if(forTesting) {\n            expression.push(\"true\");\n          } else {\n            expression.push(part.name);\n          }\n          break;\n        case 'logic':\n          if(part.name === 'AND') {\n            expression.push('&&');\n          } else if(part.name === 'OR') {\n            expression.push('||');\n          } else {\n            expression.push('!');\n          }\n          break;\n        case 'grouping':\n          if(part.name === 'OPEN') {\n            expression.push('(');\n          } else {\n            expression.push(')');\n          }\n          break;\n        default:\n          break;\n      }\n    });\n    return expression.join(' ');\n  }\n}\n\nexport default ConditionEngine;","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Space, List, Typography, Tabs, Tag } from 'antd';\nimport { CaretLeftOutlined } from '@ant-design/icons';\nimport { AppContext } from '../../stores/AppStore';\nimport ComplexConditionExpressionListItem from '../entity_views/ComplexConditionExpressionListItem';\nimport EditorUtils from '../../utils/EditorUtils';\n//import AppLogicController from '../../controllers/AppLogicController';\nimport AppDataFetchController from '../../controllers/AppDataFetchController';\nimport ConditionEditorUtils from '../../utils/ConditionEditorUtils';\nimport '../../styles/components/drawers/ConditionEditor.scss';\n\n\nimport ConditionEngine from '../../controllers/engines/ConditionEngine';\n\nconst { TabPane } = Tabs;\nconst { Text } = Typography;\nconst conditionCaret = <CaretLeftOutlined key='caret' style={{color: '#fa541c'}} />;\nlet engine;\n\nconst ConditionEditor = ({ isDrawerVisible, onDrawerClose }) => {\n  const [state, dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [condition, setCondition] = useState(null);\n  const [conditionType, setConditionType] = useState('1'); //1 => single, 2 => complex\n  const [validCondition, setValidCondition] = useState(false);\n  //single expression\n  const [singleExpression, setSingleExpression] = useState(EditorUtils.getEmptyExpression());\n\n  //complex expression\n  const [complexCondition, setComplexCondition] = useState([]);\n  const [complexConditionExpressions, setComplexConditionExpressions] = useState([]);\n\n  //GS props\n  const [gameStates, setGameStates] = useState(undefined);\n\n  useEffect(() => {\n    //Mount\n    AppDataFetchController.fetchGameStateProps().then((fetchedGameStateProps) => {\n      setGameStates(fetchedGameStateProps);\n    }).catch(error => {\n      console.log('||--FAIL', error);\n    });\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      resetEditor();\n      form.resetFields();\n      setCondition(state.activeCondition);\n      fillConditionValues();\n      engine = new ConditionEngine();\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, condition]);  // eslint-disable-line\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const resetEditor = () => {\n    setSingleExpression(EditorUtils.getEmptyExpression());\n    setComplexCondition([]);\n    setComplexConditionExpressions([]);\n    setValidCondition(false);\n  };\n\n  const fillConditionValues = () => {\n    if (condition !== null) {\n      if(condition.mode === 'simple') {\n        setConditionType('1');\n        fillSingleCondition();\n      } else {\n        setConditionType('2');\n        fillComplexCondition();\n      }\n    } else {\n      setConditionType('1');\n    }\n  };\n\n  const fillSingleCondition = () => {\n    const condExpression = condition.expressions[0];\n    const exp = singleExpression;\n    const gameStateProp = gameStates.find(gameState => gameState.id === condExpression.gsp_id);\n    exp.gsProp = gameStateProp.name;\n    exp.gsPropType = gameStateProp.type;\n    exp.comp = null;\n    exp.compId = condExpression.compId;\n    exp.valueInputType = EditorUtils.getInputTypeForExpression(exp.gsPropType, exp.compId);\n    exp.value = condExpression.value;\n    exp.valueDisplay = condExpression.valueDisplay;\n    setSingleExpression({ ...exp });\n    setValidCondition(false);\n  };\n\n  const fillComplexCondition = () => {\n    let gameStateProp;\n    let exp;\n    let newComplexConditionExpressions = [];\n    setComplexCondition(condition.logic_func);\n    condition.expressions.forEach(condExpression => {\n      gameStateProp = gameStates.find(gameState => gameState.id === condExpression.gsp_id);\n      exp = EditorUtils.getEmptyExpression(condExpression.name);\n      exp.gsProp = gameStateProp.name;\n      exp.gsPropType = gameStateProp.type;\n      exp.comp = null;\n      exp.compId = condExpression.compId;\n      exp.valueInputType = EditorUtils.getInputTypeForExpression(exp.gsPropType, exp.compId);\n      exp.value = condExpression.value;\n      exp.valueDisplay = condExpression.valueDisplay;\n      newComplexConditionExpressions.push(exp);\n    });\n    setComplexConditionExpressions(newComplexConditionExpressions);\n  };\n\n  //single cond\n  const handleSingleCondGSPropChange = (value) => {\n    const exp = singleExpression;\n    const prop = gameStates[value];\n    exp.gsProp = prop.name;\n    exp.gsPropType = prop.type;\n    exp.comp = null;\n    exp.compId = null;\n    exp.valueInputType = null;\n    exp.value = null;\n    exp.valueDisplay = null;\n    setSingleExpression({ ...exp });\n    setValidCondition(false);\n  };\n\n  const handleSingleCondComparatorChange = (value) => {\n    const exp = singleExpression;\n    exp.compId = value;\n    exp.valueInputType = EditorUtils.getInputTypeForExpression(exp.gsPropType, exp.compId);\n    exp.value = null;\n    exp.valueDisplay = null;\n    setSingleExpression({ ...exp });\n    setValidCondition(false);\n  };\n\n  const handleSingleCondValueChange = (value, valueDisplay) => {\n    const exp = singleExpression;\n    exp.value = value;\n    exp.valueDisplay = valueDisplay;\n    setSingleExpression({ ...exp });\n    setValidCondition(false);\n  };\n\n  //complex condition expressions\n  const handleComplexCondExpressionChange = (expression) => {\n    const expressions = [...complexConditionExpressions];\n    const index = expressions.findIndex(exp => exp.name === expression.name);\n    expressions[index] = expression;\n    setComplexConditionExpressions(expressions);\n    setValidCondition(false);\n  };\n\n  //complex condition buttons\n  const complexConditionButtonClicked = (type) => {\n    let newCondition = [...complexCondition];\n    switch(type) {\n      case 'ADD_EXP':\n        const name = 'EXP' + (complexConditionExpressions.length + 1);\n        const newExp = EditorUtils.getEmptyExpression(name);\n        let newComplexConditionExpressions = [...complexConditionExpressions];\n        newComplexConditionExpressions.push(newExp);\n        newCondition.push({'type': 'exp', 'name': name, 'displayName': name});\n        setComplexConditionExpressions(newComplexConditionExpressions);\n        break;\n      case 'AND':\n        newCondition.push({'type': 'logic', 'name': 'AND', 'displayName': 'AND'});\n        break;\n      case 'OR':\n        newCondition.push({'type': 'logic', 'name': 'OR', 'displayName': 'OR'});\n        break;\n      case 'NEG':\n        newCondition.push({'type': 'logic', 'name': 'NEG', 'displayName': 'NEG'});\n        break;\n      case 'OPEN_GR':\n        newCondition.push({'type': 'grouping', 'name': 'OPEN', 'displayName': '('});\n        break;\n      case 'CLOSE_GR':\n        newCondition.push({'type': 'grouping', 'name': 'CLOSE', 'displayName': ')'});\n        break;\n      case 'DELETE':\n        const removed = newCondition.pop();\n        if(removed && removed.type === 'exp') {\n          let newComplexConditionExpressions = [...complexConditionExpressions];\n          newComplexConditionExpressions.pop();\n          setComplexConditionExpressions(newComplexConditionExpressions);\n        }\n        break;\n      case 'CLEAR':\n        newCondition = [];\n        setComplexConditionExpressions([]);\n        break;\n      default:\n        break;\n    }\n    setComplexCondition(newCondition);\n    setValidCondition(false);\n  };\n\n  const validateCurrentCondition = () => {\n    if(conditionType === '1') { //validate single\n      setValidCondition(validateExpression(singleExpression));\n    } else { //validate complex\n      //has expressions \n      const hasExpressions = complexConditionExpressions.length > 0;\n      //all expressions are valid\n      let validExpressions = 0;\n      complexConditionExpressions.forEach(expression => {\n        if(validateExpression(expression)) {\n          validExpressions += 1;\n        }\n      });\n      const allExpressionsValid = complexConditionExpressions.length === validExpressions;\n      //condition is js valid\n      const conditionValid = engine.validateComplexCondition(complexCondition, complexConditionExpressions);\n      setValidCondition(hasExpressions && allExpressionsValid && conditionValid);\n    }\n  };\n\n  const validateExpression = (expression) => {\n    //prop\n    if(expression.gsProp === null) {\n      return false;\n    }\n    //comparator\n    if(expression.compId === null) {\n      return false;\n    }\n    //value\n    if(expression.valueInputType === null) {\n      return false;\n    }\n    switch(expression.valueInputType) {\n      case 'SELECTOR':\n        if(expression.value === null) {\n          return false;\n        }\n        break;\n      case 'TEXT_INT':\n        if(expression.value === null || isNaN(expression.value)) {\n          return false;\n        }\n        break;\n      case 'TEXT_STRING': \n        if(expression.value === null || expression.value.trim().length === 0) {\n          return false;\n        }\n        break;\n      case 'BOOLEAN':\n      case 'NONE':\n      default:\n        //no validation required for value\n        break;\n    }\n    return true;\n  };\n\n  const buildExpressions = () => {\n    let gameStateProp;\n    if (conditionType === '1') {\n      gameStateProp = gameStates.find(gameState => gameState.name === singleExpression.gsProp);\n      return [{gsp_id: gameStateProp.id, compId: singleExpression.compId, value: singleExpression.value, valueDisplay: singleExpression.valueDisplay}];\n    } else {\n      let expressions = [];\n      complexConditionExpressions.forEach(expression => {\n        gameStateProp = gameStates.find(gameState => gameState.name === expression.gsProp);\n        expressions.push({gsp_id: gameStateProp.id, compId: expression.compId, value: expression.value, valueDisplay: expression.valueDisplay, name: expression.name});\n      });\n      return expressions;\n    }\n  };\n\n  const buildDisplayCondition = () => {\n    let comparator;\n    let valueDisplay;\n    if (conditionType === '1') {\n      comparator = EditorUtils.getComparatorName(singleExpression.compId);\n      valueDisplay = singleExpression.valueDisplay !== null ? singleExpression.valueDisplay : singleExpression.value;\n      return [{type: 'exp', propName: singleExpression.gsProp, comp: comparator, value: valueDisplay}]\n    } else {\n      let exp;\n      let displayExp;\n      let expressions = [];\n      complexCondition.forEach(condition => {\n        if(condition.type === 'exp') {\n          exp = complexConditionExpressions.find(condExp => condExp.name === condition.name);\n          comparator = EditorUtils.getComparatorName(exp.compId);\n          valueDisplay = exp.valueDisplay !== null ? exp.valueDisplay : exp.value;\n          displayExp = {type: 'exp', propName: exp.gsProp, comp: comparator, value: valueDisplay};\n        } else if (condition.type === 'logic') {\n          displayExp = {type: 'logic', name: condition.displayName};\n        } else { // type === 'grouping'\n          displayExp = {type: 'grouping', name: condition.displayName};\n        }\n        expressions.push(displayExp);\n      });\n      return expressions;\n    }\n  };\n\n  const onFinish = (values) => {\n    let result = {\n      mode: (conditionType === '1') ? 'simple' : 'complex',\n      expressions: buildExpressions(),\n      display: buildDisplayCondition(),\n    };\n    if (conditionType === '2') {\n      result.logic_func = complexCondition;\n    }\n    dispatch({type: 'SET_ACTIVE_CONDITION_COMPLETED', payload: result});\n    closeDrawer();\n  };\n\n  //renders\n  const renderComplexConditionButtons = () => {\n    return (\n      <Space>\n        <Button type='default' size='small' onClick={() => { complexConditionButtonClicked('ADD_EXP') }}>Expression</Button>\n        <Button type='default' size='small' onClick={() => { complexConditionButtonClicked('AND') }}>AND</Button>\n        <Button type='default' size='small' onClick={() => { complexConditionButtonClicked('OR') }}>OR</Button>\n        <Button type='default' size='small' onClick={() => { complexConditionButtonClicked('NEG') }}>NEG</Button>\n        <Button type='default' size='small' onClick={() => { complexConditionButtonClicked('OPEN_GR') }}>(</Button>\n        <Button type='default' size='small' onClick={() => { complexConditionButtonClicked('CLOSE_GR') }}>)</Button>\n        <Button type='default' size='small' onClick={() => { complexConditionButtonClicked('DELETE') }}>Delete</Button>\n        <Button type='default' size='small' onClick={() => { complexConditionButtonClicked('CLEAR') }}>Clear</Button>\n      </Space>\n    );\n  };\n\n  const renderComplexCondition = () => {\n    let complexConditionRender = complexCondition && complexCondition.map((element, index) => {\n      let color = element.type === 'logic' ? '#52c41a' : (element.type === 'grouping' ? '#eb2f96' : '#1890ff');\n      return (<Tag key={index} color={color}>{element.displayName || element.name}</Tag>);\n    });\n    complexConditionRender.push(conditionCaret);\n    return complexConditionRender;\n  };\n\n  const complexConditionExpressionsHeader = (\n    <Row>\n      <Col span={4}><Text strong>Expression</Text></Col>\n      <Col span={7}><Text strong>Game State Prop</Text></Col>\n      <Col span={6}><Text strong>Comparator</Text></Col>\n      <Col span={7}><Text strong>Value</Text></Col>\n    </Row>\n  );\n\n  return (\n    <Drawer\n      title={(condition === null) ? 'New condition' : 'Edit condition'}\n      className='condition-editor'\n      placement='bottom'\n      height={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" style={{ marginRight: 8 }} onClick={validateCurrentCondition}>\n            Validate\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-condition-id' disabled={!validCondition}>\n            {(condition === null) ? 'Set' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-condition' id='add-edit-condition-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Tabs tabPosition='left' activeKey={conditionType} onChange={(activeKey) => { setConditionType(activeKey); setValidCondition(false); }}>\n          <TabPane tab=\"Single\" key=\"1\">\n            <Row gutter={[24, 16]}>\n              <Col span={8}>\n                <Form.Item\n                  label=\"Game State Prop\"\n                >\n                  {ConditionEditorUtils.renderGameStatePropsSelector(singleExpression.gsProp, handleSingleCondGSPropChange, gameStates)}\n                </Form.Item>\n              </Col>\n              <Col span={8} style={{display: (singleExpression.gsProp !== null ? 'block' : 'none')}}>\n                <Form.Item\n                  label=\"Comparator\"\n                >\n                  {ConditionEditorUtils.renderComparatorSelector(singleExpression.gsPropType, singleExpression.compId, handleSingleCondComparatorChange)}\n                </Form.Item>\n              </Col>\n              <Col span={8} style={{display: (singleExpression.compId !== null && singleExpression.compId !== 'IS_EMPTY' ? 'block' : 'none')}}>\n                <Form.Item\n                  label=\"Value\"\n                >\n                  {ConditionEditorUtils.renderValueSelector(singleExpression.gsPropType, singleExpression.valueInputType, singleExpression.value, handleSingleCondValueChange)}\n                </Form.Item>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tab=\"Complex\" key=\"2\">\n            <Row style={{marginBottom: 8}}>\n              <Col span={24}>{renderComplexConditionButtons()}</Col>\n            </Row>\n            <Row style={{marginBottom: 16}}>\n              <Col span={24}>\n                <div className='condition-viewer'>\n                  {renderComplexCondition()}\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                { (complexConditionExpressions.length > 0) &&\n                  <List\n                    style={{marginBottom: 16, maxWidth: '94%'}}\n                    header={complexConditionExpressionsHeader}\n                    dataSource={complexConditionExpressions}\n                    renderItem={item => (\n                      <ComplexConditionExpressionListItem\n                        expression={item}\n                        gameStates={gameStates}\n                        onChange={handleComplexCondExpressionChange}\n                      />\n                    )}\n                  />\n                }\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default ConditionEditor;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\n\nconst NewStory = ({ isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [title, setTitle] = useState('');\n  const [version, setVersion] = useState('');\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      openDrawer();\n    }\n  }, [isDrawerVisible, form]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const title = values.title.trim();\n    const version = values.version.trim();\n    if(title === '' || version === ''){\n      closeDrawer();\n      message.error('Something went wrong, sorry :(');\n      return;\n    }\n    const data = {title, version};\n    AppLogicController.createNewStory(dispatch, data).then(result => {\n      closeDrawer();\n      message.success('Story created!');\n    }).catch(error => {\n      closeDrawer();\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  return (\n    <Drawer\n      title=\"New story\"\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='create-story-id'>\n            Create\n          </Button>\n        </div>\n      }\n    >\n      <Form layout=\"vertical\" name='create-story' id='create-story-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"title\"\n              label=\"Title\"\n              rules={[{ required: true, message: 'Please enter a title' }]}\n            >\n              <Input placeholder=\"Please enter a title\" value={title} onChange={(e) => { setTitle(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"version\"\n              label=\"Version\"\n              rules={[{ required: true, message: 'Please enter a version' }]}\n            >\n              <Input placeholder=\"Please enter a version\" value={version} onChange={(e) => { setVersion(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default NewStory;\n","import db from '../db/AppDatabase';\n\n//Controls app-level verifications\nclass AppValidationsController {\n\n  //-- verify story is runnable --//\n  static async verifyStoryRunnable(dispatch) {\n    dispatch({type: 'SET_STORY_VERIFYING_RUNNABLE'});\n\n    //TODO: Verify all data in story is set properly to execute playtesting\n\n    setTimeout(() => { dispatch({type: 'SET_STORY_RUNNABLE'}); }, 1000);\n\n  }\n\n  //-- validateEntityNames --//\n  static async validateEntityNames(testNames, dbTable) {\n    let invalidNames = [];\n    return db.transaction('r', dbTable, async () => {\n      for (const name of testNames) {\n        const entity = await dbTable.where({name: name}).first();\n        if(entity === undefined){\n          invalidNames.push(name);\n        }\n      }\n      if(invalidNames.length === 0) {\n        return Promise.resolve();\n      } else {\n        return Promise.reject(invalidNames);\n      }\n    });\n  }\n\n  static async validateCustomEntityNames(testNames, entityDefId) {\n    let invalidNames = [];\n    return db.transaction('r', db.custom_entities, async () => {\n      for (const name of testNames) {\n        const entity = await db.custom_entities.where({name: name, custom_entity_def_id: entityDefId}).first();\n        if(entity === undefined){\n          invalidNames.push(name);\n        }\n      }\n      if(invalidNames.length === 0) {\n        return Promise.resolve();\n      } else {\n        return Promise.reject(invalidNames);\n      }\n    });\n  }\n\n}\n\nexport default AppValidationsController;","import db from '../db/AppDatabase';\nimport { exportDB, importInto } from 'dexie-export-import';\nimport download from 'downloadjs';\n\n//Controls story import/export operations\nclass ImportExportStoryController {\n\n  static async downloadStory(dispatch, progressCallback = () => {}, errorCallback = () => {}) {\n    try {\n      const story = await db.stories.where('id').equals(1).first();\n      const d = new Date();\n      const date = d.getFullYear().toString() + d.getMonth().toString() + d.getDate().toString() + '-' + d.getHours().toString() + d.getMinutes().toString() + d.getSeconds().toString();\n      const fileName = story.title.replaceAll(' ', '_') + '-' + date + '.json';\n      const blob = await exportDB(db, {prettyJson: true, progressCallback});\n      download(blob, fileName, 'application/json');\n    } catch (error) {\n      errorCallback(error);\n    }\n  }\n\n  static async loadStoryFromFile(dispatch, file, progressCallback = () => {}, successCallback = () => {}) {\n    try {\n      if(db.isOpen()){\n        await db.delete().then( () => db.open() );\n      }\n      await importInto(db, file, {\n        acceptMissingTables: false,\n        acceptVersionDiff: false,\n        acceptNameDiff: false,\n        acceptChangedPrimaryKey: false,\n        progressCallback: progressCallback\n      });\n      const story = await db.stories.where('id').equals(1).first();\n      if (story !== undefined) {\n        dispatch({type: 'SET_STORY_LOADED', payload: true});\n      }\n      successCallback();\n    } catch (error) {\n      dispatch({type: 'SET_APP_STORY_LOAD_ERROR', payload: error});\n      console.log(error);\n    }\n  }\n\n  static async loadStoryFromUrl(dispatch, url, progressCallback = () => {}, successCallback = () => {}) {\n    dispatch({type: 'SET_APP_GLOBAL_LOADING', payload: true});\n    await new Promise(r => setTimeout(r, 800));\n    try {\n      fetch(url).then(async response => {\n        if (response.status !== 200) {\n          dispatch({type: 'SET_APP_STORY_LOAD_ERROR', payload: response.status});\n          return;\n        }\n        //clear db\n        if(db.isOpen()){\n          await db.delete().then( () => db.open() );\n        }\n        //load new story\n        response.blob().then(async blob => {\n          await importInto(db, blob, {\n            acceptMissingTables: false,\n            acceptVersionDiff: false,\n            acceptNameDiff: false,\n            acceptChangedPrimaryKey: false,\n            progressCallback: progressCallback\n          });\n          const story = await db.stories.where('id').equals(1).first();\n          if (story !== undefined) {\n            dispatch({type: 'SET_STORY_LOADED', payload: true});\n            successCallback();\n          }\n        });\n      })\n      .catch(error => {\n        dispatch({type: 'SET_APP_STORY_LOAD_ERROR', payload: error});\n        console.log(error);\n      });\n    } catch (error) {\n      dispatch({type: 'SET_APP_STORY_LOAD_ERROR', payload: error});\n      console.log(error);\n    }\n  }\n\n}\n\nexport default ImportExportStoryController;","//-- Components --//\nimport { useState, useEffect, useContext } from 'react';\nimport { Layout, Menu, Col, Row, Button, Popconfirm, Popover, message } from 'antd';\nimport { SettingFilled, BookFilled, DownloadOutlined, UploadOutlined, DeleteFilled, PlusOutlined, BugOutlined, CaretRightOutlined, RocketOutlined } from '@ant-design/icons';\nimport NewStory from './drawers/NewStory';\n//-- Controller --//\nimport AppLogicController from '../controllers/AppLogicController';\nimport AppValidationsController from '../controllers/AppValidationsController';\nimport ImportExportStoryController from '../controllers/ImportExportStoryController';\n//-- Context --//\nimport { AppContext } from '../stores/AppStore';\n//-- Images --//\nimport logo from '../images/logo192.png';\n//-- Style --//\nimport '../styles/components/AppNav.scss';\n\nconst { Sider } = Layout;\n\nconst AppNav = () => {\n  const [state, dispatch] = useContext(AppContext);\n\n  const [collapsed, setCollapsed] = useState(false);\n  const [shouldRenderMenu, setShouldRenderMenu] = useState(true);\n  const [newStoryVisible, setNewStoryVisible] = useState(false);\n\n  useEffect(() => {\n    //Mount\n    document.getElementById('load-story-selector').addEventListener('change', readStoryFile, false);\n\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    setShouldRenderMenu(false);\n    setTimeout(() => {\n      setShouldRenderMenu(true);\n    }, 5);\n  }, [state.storyLoaded]);\n\n\n  const loadStory = () => {\n    document.getElementById('load-story-selector').click();\n  };\n\n  const clearStoryTest = () => {\n    AppLogicController.devStartOver(dispatch);\n    //dispatch({type: 'SET_STORY_LOADED', payload: false});\n  };\n\n  const downloadStory = () => {\n    ImportExportStoryController.downloadStory(dispatch);\n  };\n\n  //dev\n  const devStartOver = () => {\n    AppLogicController.devStartOver(dispatch);\n  };\n\n\n  const readStoryFile = async (e) => {\n    var file = e.target.files[0];\n    if (!file) {\n      return;\n    }\n    ImportExportStoryController.loadStoryFromFile(dispatch, file, importStoryProgressCallback, importStorySuccessCallback);\n  };\n\n  const importStoryProgressCallback = ({totalRows, completedRows}) => {\n    //console.log(`Progress: ${completedRows} of ${totalRows} rows completed`);\n  };\n\n  const importStorySuccessCallback = () => {\n    message.success('Story imported successfully!');\n  };\n\n  const toggleNav = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const handleClick = ({key}) => {\n    switch(key) {\n      case '1':\n        dispatch({type: 'SET_APP_PAGE', payload: 'CONFIG'});\n        break;\n      case '2':\n        dispatch({type: 'SET_APP_PAGE', payload: 'STORY'});\n        break;\n      case '3':\n        AppValidationsController.verifyStoryRunnable(dispatch);\n        setTimeout(() => { dispatch({type: 'SET_APP_PAGE', payload: 'PLAYMODE'}); }, 50);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const loadSample = (sampleUrl) => {\n    ImportExportStoryController.loadStoryFromUrl(dispatch, sampleUrl, importSampleProgressCallback, importSampleSuccessCallback);\n  };\n\n  const importSampleProgressCallback = () => {\n    //\n  };\n\n  const importSampleSuccessCallback = () => {\n    message.success('Sample story imported successfully!');\n  };\n\n  const renderMenu = () => {\n    return (\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={(state.storyLoaded ? ['1'] : [])} onClick={handleClick}>\n        <Menu.Item key=\"1\" disabled={!state.storyLoaded} icon={<SettingFilled />}>\n          Configuration\n        </Menu.Item>\n        <Menu.Item key=\"2\" disabled={!state.storyLoaded} icon={<BookFilled />}>\n          Story\n        </Menu.Item>\n        <Menu.Item key=\"3\" disabled={!state.storyLoaded} icon={<CaretRightOutlined />}>\n          Play\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  const renderLoadStory = () => {\n    return (\n      <>\n        {state.storyLoaded\n          ? \n          <Popconfirm\n            title={() => { return (<p>Download current story to avoid losing your changes.<br/>Continue loading a new story?</p>); }}\n            onConfirm={loadStory}\n            onCancel={() => {}}\n            okText='Yes'\n            cancelText='No'\n            placement='right'\n          >\n            <Button type=\"default\" block icon={<UploadOutlined />} style={{ marginBottom: 12 }}>Load story</Button>\n          </Popconfirm>\n          : \n          <Button type=\"default\" block icon={<UploadOutlined />} style={{ marginBottom: 12 }} onClick={loadStory}>Load story</Button>\n        }\n        <input type='file' id='load-story-selector' accept='.json' style={{ display: 'none' }} />\n      </>\n    );\n  };\n\n  const renderClearStory = () => {\n    return (\n      <Popconfirm\n        title='All data will be lost. Are you sure to delete this story?'\n        onConfirm={clearStoryTest}\n        onCancel={() => {}}\n        okText='Yes'\n        cancelText='No'\n        placement='right'\n      >\n        <Button type='default' block icon={<DeleteFilled />} style={{ marginBottom: 12 }}>Clear story</Button>\n      </Popconfirm>\n    );\n  };\n\n  const renderLoadSamples = () => {\n    const content = (\n      <div>\n        <Button type='default' block style={{ marginBottom: 12 }} onClick={() => { loadSample('https://gcsebas99.github.io/rpgsp/samples/Sample1_en.json') }}>Sample #1 (english)</Button>\n        <Button type='default' block style={{ marginBottom: 12 }} onClick={() => { loadSample('https://gcsebas99.github.io/rpgsp/samples/Sample1_es.json') }}>Sample #1 (spanish)</Button>\n      </div>\n    );\n    return (\n      <Popover placement='right' title='Select a story' content={content} trigger='click'>\n        <Button type=\"default\" block icon={<RocketOutlined />} style={{ marginBottom: 12 }}>Load samples</Button>\n      </Popover>\n    );\n  };\n\n  return (\n    <>\n      <Sider className='app-nav' collapsible collapsed={collapsed} onCollapse={toggleNav}>\n        <div className={`logo ${collapsed ? 'collapsed' : ''}`}>\n          <img src={logo} alt=\"RPG Story Playtesting\" onClick={toggleNav} />\n        </div>\n        <div className='menu-wrapper'>\n          {shouldRenderMenu && renderMenu()}\n        </div>\n        {!collapsed &&\n          <Row gutter={16} style={{ marginLeft: 8, marginRight: 8, marginTop: 32 }}>\n            <Col span={24}>\n              {!state.storyLoaded &&\n                <Button type=\"default\" onClick={() => { setNewStoryVisible(true); }} block icon={<PlusOutlined />} style={{ marginBottom: 12 }} >New story</Button>\n              }\n              {renderLoadStory()}\n              {state.storyLoaded &&\n                <>\n                  <Button type=\"default\" block icon={<DownloadOutlined />} style={{ marginBottom: 12 }} onClick={downloadStory}>Download story</Button>\n                  {renderClearStory()}\n                </>\n              }\n              {renderLoadSamples()}\n              <Button type=\"default\" block icon={<BugOutlined />} style={{ marginBottom: 12 }} onClick={devStartOver}>dev:startover</Button>\n            </Col>\n          </Row>\n        }\n      </Sider>\n      <NewStory isDrawerVisible={newStoryVisible} onDrawerClose={() => { setNewStoryVisible(false); }} />\n    </>\n  );\n};\n\nexport default AppNav;\n","import { Layout, Typography } from 'antd';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../db/AppDatabase';\nimport '../styles/components/StoryTitle.scss';\n\nconst { Header } = Layout;\nconst { Title, Text } = Typography;\n\nconst StoryTitle = () => {\n  const story = useLiveQuery(() => db.stories.where('id').equals(1).first());\n\n  if (story === undefined) return null;\n\n  return (\n    <Header className='story-title'>\n      <Title level={4}>RPG-SP: {story.title}</Title>\n      <Text type='secondary'>Version: {story.version}</Text>\n    </Header>\n  );\n};\n\nexport default StoryTitle;\n","export default __webpack_public_path__ + \"static/media/jake-reading.fddcdec6.png\";","import { Layout, Typography } from 'antd';\nimport jake_reading from '../../images/jake-reading.png';\nimport '../../styles/components/pages/EmptyProjectPage.scss';\n\nconst { Content } = Layout;\nconst { Text } = Typography;\n\nconst EmptyProjectPage = () => {\n\n  return (\n    <Content className='empty-project-page'>\n      <img src={jake_reading} alt=\"Start a new story\" />\n      <Text>Create a new story or load an existing one</Text>\n    </Content>\n  );\n};\n\nexport default EmptyProjectPage;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\n\nconst AddCustomEntity = ({ isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      openDrawer();\n    }\n  }, [isDrawerVisible, form]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onNameChange = (e) => {\n    const key = e.target.value.toLowerCase().replace(/\\s/g, '');\n    form.setFieldsValue({key: key});\n  };\n\n  const onFinish = (values) => {\n    const name = values.name.trim();\n    const key = values.key.trim();\n    const singular = values.singular.trim();\n    if(name === '' || singular === ''){\n      closeDrawer();\n      message.error('Do not leave empty fields, sorry :(');\n      return;\n    }\n    const data = {name, key, singular};\n    AppLogicController.createNewCustomEntityDef(dispatch, data).then(result => {\n      closeDrawer();\n      message.success('New entity created!');\n    }).catch(error => {\n      closeDrawer();\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  return (\n    <Drawer\n      title=\"Add Custom Entity\"\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='create-custom-entity-id'>\n            Add\n          </Button>\n        </div>\n      }\n    >\n      <Form layout=\"vertical\" name='create-custom-entity' id='create-custom-entity-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name (use plural)\"\n              rules={[{ required: true, message: 'Please enter a name' }]}\n            >\n              <Input placeholder=\"Please enter a name\" onChange={onNameChange} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"key\"\n              label=\"Key\"\n            >\n              <Input readOnly placeholder=\"\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"singular\"\n              label=\"Singular\"\n              rules={[{ required: true, message: 'Please enter singular entity name' }]}\n            >\n              <Input placeholder=\"Please enter singular entity name\" />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddCustomEntity;\n","import { useState, useEffect, useContext } from 'react';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport { Drawer, Button, List, Row, Col, Divider, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport ColorPicker from 'rc-color-picker';\nimport 'rc-color-picker/assets/index.css';\n\nconst EditColors = ({ isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [visible, setVisible] = useState(false);\n  const [newDefaultColors, setNewDefaultColors] = useState({});\n  const [newCustomColors, setNewCustomColors] = useState({});\n  const [saveSucceed, setSaveSucceed] = useState(true);\n\n  const customEntityDefs = useLiveQuery(() => db.custom_entity_defs.toArray());\n  const defaultEntityColors = useLiveQuery(() => db.default_entity_colors.toArray());\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      openDrawer();\n    }\n  }, [isDrawerVisible]);\n\n  const openDrawer = () => {\n    setNewDefaultColors({});\n    setNewCustomColors({});\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const setDefaultEntityColor = (id, color) => {\n    let newColors = newDefaultColors;\n    newColors[id] = color;\n    setNewDefaultColors(newColors);\n  };\n\n  const setCustomEntityColor = (id, color) => {\n    let newColors = newCustomColors;\n    newColors[id] = color;\n    setNewCustomColors(newColors);\n  };\n\n  const updateNewColors = () => {\n    setSaveSucceed(true);\n    if(Object.keys(newDefaultColors).length === 0 && Object.keys(newCustomColors).length === 0 ) {\n      closeDrawer();\n      return;\n    }\n    for (const id in newDefaultColors) {\n      AppLogicController.updateDefaultEntityColor(dispatch, parseInt(id), {'color': newDefaultColors[id]}).then(result => {\n        //\n      }).catch(error => {\n        setSaveSucceed(false);\n      });\n    }\n    for (const id in newCustomColors) {\n      AppLogicController.updateCustomEntityDefColor(dispatch, parseInt(id), {'color': newCustomColors[id]}).then(result => {\n        //\n      }).catch(error => {\n        setSaveSucceed(false);\n      });\n    }\n    if(saveSucceed) {\n      closeDrawer();\n      message.success('Colors updated!');\n    } else {\n      closeDrawer();\n      message.error('Something went wrong, sorry :(');\n    }    \n  };\n\n  return (\n    <Drawer\n      title=\"Edit Colors\"\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" onClick={updateNewColors}>\n            Update\n          </Button>\n        </div>\n      }\n    >\n      { (defaultEntityColors !== undefined && defaultEntityColors.length > 0) && \n        <List\n          dataSource={defaultEntityColors}\n          renderItem={item => (\n            <List.Item className='default-ent-color-list-item'>\n              <Row style={{width: '100%'}}>\n                <Col span={18} style={{textTransform: 'capitalize'}}>{item.name}</Col>\n                <Col span={6} style={{textAlign: 'right'}}>\n                  <ColorPicker\n                    animation='slide-up'\n                    placement='bottomRight'\n                    enableAlpha={false}\n                    color={item.color}\n                    onChange={(colors) => { setDefaultEntityColor(item.id, colors.color) }}\n                  />\n                </Col>\n              </Row>\n            </List.Item>\n          )}\n        />\n      }\n      { (customEntityDefs !== undefined && customEntityDefs.length > 0) && \n        <>\n          <Divider style={{margin: '0'}} />\n          <List\n            dataSource={customEntityDefs}\n            renderItem={item => (\n              <List.Item className='custom-ent-color-list-item'>\n                <Row style={{width: '100%'}}>\n                  <Col span={18}>{item.name}</Col>\n                  <Col span={6} style={{textAlign: 'right'}}>\n                    <ColorPicker\n                      animation='slide-up'\n                      placement='bottomRight'\n                      enableAlpha={false}\n                      color={item.color}\n                      onChange={(colors) => { setCustomEntityColor(item.id, colors.color) }}\n                    />\n                  </Col>\n                </Row>\n              </List.Item>\n            )}\n          />\n        </>\n      }\n    </Drawer>\n  );\n};\n\nexport default EditColors;\n","import { List, Row, Col, Button, Popconfirm } from 'antd';\nimport '../../styles/components/GameStateListItem.scss';\n\nconst GameStateListItem = ({\n  gameState,\n  onEditGameStateProp = () => {},\n  onRemoveGameStateProp = () => {},\n}) => {\n\n  let defaultValue;\n  if (gameState.type.endsWith('arr')) {\n    defaultValue = '[ ' + gameState.default + ' ]';\n  } else {\n    if(gameState.type === 'boolean') {\n      defaultValue = gameState.default ? 'true' : 'false';\n    } else {\n      defaultValue = gameState.default;\n    }\n  }\n\n  return (\n    <List.Item className='game-state-list-item'>\n      <Row>\n        <Col span={6}>{gameState.name}</Col>\n        <Col span={6}>{gameState.type}</Col>\n        <Col span={8}>{defaultValue}</Col>\n        <Col span={4} style={{textAlign: 'right'}}>\n          {gameState.edit_mode !== 'none' &&\n            <Button type='link' size='small' onClick={() => { onEditGameStateProp() }}>Edit</Button>\n          }\n          {gameState.removable &&\n            <Popconfirm\n              title={`Are you sure you want to remove this game state prop?`}\n              onConfirm={() => { onRemoveGameStateProp() }}\n              onCancel={() => {}}\n              okText='Yes'\n              cancelText='No'\n              placement='bottomRight'\n            >\n              <Button type='link' size='small'>Remove</Button>\n            </Popconfirm>\n          }\n        </Col>\n      </Row>\n    </List.Item>\n  );\n};\n\nexport default GameStateListItem;\n","import { useState, useEffect } from 'react';\nimport { Select } from 'antd';\nimport AppDataFetchController from '../../controllers/AppDataFetchController';\n\nconst { Option } = Select;\n\nconst EntitySelectorView = ({\n  entityType = 'location',\n  value,\n  onChangeCallback,\n  disabled = false,\n  placeholder = '',\n  emptyOption = false,\n  emptyOptionLabel = '(empty)',\n  customFetch = null,\n  customFetchParams = null,\n}) => {\n  const [entities, setEntities] = useState([]);\n  const [nameProp, setNameProp] = useState('name');\n\n  useEffect(() => {\n    //Mount\n    if (customFetch) {\n      fetchCustomEntities();\n    } else {\n      AppDataFetchController.fetchStoryEntities(entityType).then((fetchedEntities) => {\n        if(entityType === 'area') {\n          setNameProp('displayName');\n        }else{\n          setNameProp('name');\n        }\n        setEntities(fetchedEntities);\n      }).catch(error => {\n        console.log('||--FAIL', error);\n      });\n    }\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    if (customFetch) {\n      fetchCustomEntities();\n    } else {\n      AppDataFetchController.fetchStoryEntities(entityType).then((fetchedEntities) => {\n        if(entityType === 'area') {\n          setNameProp('displayName');\n        }else{\n          setNameProp('name');\n        }\n        setEntities(fetchedEntities);\n      }).catch(error => {\n        console.log('||--FAIL', error);\n      });\n    }\n  }, [customFetch, entityType]); // eslint-disable-line\n\n  const fetchCustomEntities = () => {\n    switch(customFetch){\n      case 'areasByLocation':\n        AppDataFetchController.fetchAreasByLocation(customFetchParams.locationId).then((fetchedEntities) => {\n          setNameProp('name');\n          setEntities(fetchedEntities);\n        }).catch(error => {\n          console.log('||--FAIL', error);\n        });\n        break;\n      case 'allSequencedActs':\n        AppDataFetchController.fetchSequencedActs().then((fetchedEntities) => {\n          setNameProp('name');\n          setEntities(fetchedEntities);\n        }).catch(error => {\n          console.log('||--FAIL', error);\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getEntityName = (id) => {\n    return (id !== -1) ? entities.find(entity => entity.id === id).name : '';\n  };\n\n  return (\n    <Select value={value} onChange={(value) => { onChangeCallback(value, getEntityName(value)) }} style={{width: '100%'}} disabled={disabled} placeholder={placeholder}>\n      {emptyOption && <Option key='empty-opt' value={-1}>{emptyOptionLabel}</Option>}\n      { entities && entities.length > 0 && entities.map(entity => {\n          return (<Option key={entity.id} value={entity.id}>{entity[nameProp]}</Option>);\n        })\n      }\n    </Select>\n  );\n};\n\nexport default EntitySelectorView;\n","import { useState, useEffect, useContext, Fragment } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, InputNumber, Select, Switch, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport AppValidationsController from '../../controllers/AppValidationsController';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport EntitySelectorView from '../entity_views/EntitySelectorView';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst AddEditGameStateProp = ({ gameStateProp = null, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [name, setName] = useState('');\n  const [type, setType] = useState('');\n  const [defaultValueInt, setDefaultValueInt] = useState(0);\n  const [defaultValueBool, setDefaultValueBool] = useState(true);\n  const [defaultValueString, setDefaultValueString] = useState('');\n  const [defaultValueEntity, setDefaultValueEntity] = useState(-1);\n  const [defaultValueEntityName, setDefaultValueEntityName] = useState(null);\n  const [defaultValueArray, setDefaultValueArray] = useState(true);\n\n  const customEntityDefs = useLiveQuery(() => db.custom_entity_defs.toArray());\n\n  useEffect(() => {\n    const populateDefault = (gameStateProp) => {\n      const defaultValue = gameStateProp.default;\n      if(!type.endsWith('arr')) { //not array\n        switch(type) {\n          case 'int':\n            form.setFieldsValue({defaultValueInt: defaultValue});\n            break;\n          case 'boolean':\n            form.setFieldsValue({defaultValueBool: defaultValue});\n            setDefaultValueBool(defaultValue);\n            break;\n          case 'string':\n            form.setFieldsValue({defaultValueString: defaultValue});\n            break;\n          case 'location':\n          case 'area':\n          case 'character':\n          default: //custom entity\n            setDefaultValueEntity(gameStateProp.default_tids !== null ? gameStateProp.default_tids : -1);\n            setDefaultValueEntityName(defaultValue);\n            break;\n        }\n      } else { //array\n        if(defaultValue.length === 0) {\n          return;\n        }\n        const valuesArray = defaultValue.split(',');\n        switch(type) {\n          case 'intarr':\n          case 'booleanarr':\n            form.setFieldsValue({defaultValueArray: valuesArray.join('\\n')});\n            break;\n          case 'stringarr':\n          case 'locationarr':\n          case 'areaarr':\n          case 'characterarr':\n          default: //custom entity array\n            let unquotedEntries = [];\n            for (const entry of valuesArray) {\n              unquotedEntries.push(entry.slice(1, -1));\n            }\n            form.setFieldsValue({defaultValueArray: unquotedEntries.join('\\n')});\n            break;\n        }\n      }\n    };\n\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      setType('');\n      if (gameStateProp) {\n        form.setFieldsValue({name: gameStateProp.name, type: gameStateProp.type});\n        setType(gameStateProp.type);\n        populateDefault(gameStateProp);\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, gameStateProp]); // eslint-disable-line\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const handleTypeChange = (value) => {\n    if(value === 'int') {\n      form.setFieldsValue({defaultValueInt: ''});\n    }\n    if(value === 'boolean') {\n      form.setFieldsValue({defaultValueBool: defaultValueBool});\n    }\n    if(value === 'string') {\n      form.setFieldsValue({defaultValueString: ''});\n    }\n    if(value.endsWith('arr')){\n      form.setFieldsValue({defaultValueArray: ''});\n    }\n    if(value !== '' && value !== 'int' && value !== 'boolean' && value !== 'string' && !value.endsWith('arr')){\n      setDefaultValueEntity(-1);\n    }\n    setType(value);\n  };\n\n  const displaySingleLineDefaultField = () => {\n    return type === 'string';\n  };\n\n  const displaySingleEntityDefaultField = () => {\n    return type !== '' && type !== 'int' && type !== 'boolean' && type !== 'string' && !type.endsWith('arr');\n  };\n\n  const displayArrayDefaultField = () => {\n    return type.endsWith('arr');\n  };\n\n  const arrayFieldLabelAndPlaceholder = (label = true) => {\n    switch(type) {\n      case 'intarr':\n        return label ? 'int[]' : 'Place one integer per line';\n      case 'booleanarr':\n        return label ? 'boolean[]' : 'Place one boolean per line';\n      case 'stringarr':\n        return label ? 'string[]' : 'Place one string per line';\n      case 'locationarr':\n        return label ? 'location[]' : 'Place one location per line';\n      case 'areaarr':\n        return label ? 'area[]' : 'Place one area per line';\n      case 'characterarr':\n        return label ? 'character[]' : 'Place one character per line';\n      default:\n        if(type.endsWith('arr')) {\n          const singular_name = type.slice(0, -3);\n          return label ? singular_name+'[]' : 'Place one '+singular_name+' per line';\n        } else {\n          return label ? '[]' : 'Place one item per line';\n        }\n    }\n  };\n\n  const onFinish = (values) => {\n    const name = values.name.trim();\n    if(name === ''){\n      message.error('Do not leave name empty');\n      return;\n    }\n    //validate type & default value\n    switch(type) {\n      case 'int':\n        if(!Number.isInteger(parseInt(values.defaultValueInt))){\n          message.error('Default is not an integer');\n        } else {\n          saveGameStateProp(values);\n        }\n        break;\n      case 'boolean':\n      case 'string':\n      case 'location':\n      case 'area':\n      case 'character':\n        saveGameStateProp(values);\n        break;\n      default:\n        if(!type.endsWith('arr')) { \n          //custom entity\n          saveGameStateProp(values);\n        } else { //any array type\n          valudateArrayTypes(values)\n        }\n        break;\n    }\n  };\n\n  const valudateArrayTypes = (values) => {\n    const defaultValues = values.defaultValueArray;\n    if(defaultValues.length === 0) {\n      saveGameStateProp(values);\n    } else {\n      const valuesArray = defaultValues.split('\\n');\n      switch(type) {\n        case 'intarr':\n          for (const integerValue of valuesArray) {\n            if(!Number.isInteger(parseInt(integerValue))){\n              message.error('All values in array must be integers');\n              return;\n            }\n          }\n          saveGameStateProp(values);\n          break;\n        case 'booleanarr':\n          for (const booleanValue of valuesArray) {\n            if(!(booleanValue === 'true' || booleanValue === 'false')){\n              message.error('All values in array must be \"true\" or \"false\"');\n              return;\n            }\n          }\n          saveGameStateProp(values);\n          break;\n        case 'stringarr':\n          for (const stringValue of valuesArray) {\n            if(stringValue.trim() === ''){\n              message.error('Do not leave empty strings (just spaces are considered empty)');\n              return;\n            }\n          }\n          saveGameStateProp(values);\n          break;\n        case 'locationarr':\n          AppValidationsController.validateEntityNames(valuesArray, db.locations).then(() => {\n            saveGameStateProp(values);\n          }).catch(invalidLocations => {\n            message.error('Invalid values: ' + invalidLocations.join(', '));\n          });\n          break;\n        case 'areaarr':\n          AppValidationsController.validateEntityNames(valuesArray, db.areas).then(() => {\n            saveGameStateProp(values);\n          }).catch(invalidAreas => {\n            message.error('Invalid values: ' + invalidAreas.join(', '));\n          });\n          break;\n        case 'characterarr':\n          AppValidationsController.validateEntityNames(valuesArray, db.characters).then(() => {\n            saveGameStateProp(values);\n          }).catch(invalidCharacters => {\n            message.error('Invalid values: ' + invalidCharacters.join(', '));\n          });\n          break;\n        default: //custom entities\n          const singular_name = type.slice(0, -3);\n          const customEntityDef = customEntityDefs.find(customEntityDef => customEntityDef.singular_name === singular_name);\n          if (customEntityDef) {\n            AppValidationsController.validateCustomEntityNames(valuesArray, customEntityDef.id).then(() => {\n              saveGameStateProp(values);\n            }).catch(invalidEntities => {\n              message.error('Invalid values: ' + invalidEntities.join(', '));\n            });\n          }\n          break;\n      }\n    }\n  };\n\n  const saveGameStateProp = (values) => {\n    if (gameStateProp === null) { //new gameStateProp\n      const name = values.name.trim();\n      const defaults = getDefaultValue(values);\n      const editMode = 'name|default';\n      const removable = true;\n      const newData = {name, type, ...defaults, editMode, removable};\n      AppLogicController.createNewGameStateProp(dispatch, newData).then(result => {\n        closeDrawer();\n        message.success('New game state prop created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing gameStateProp\n      const name = values.name.trim();\n      const defaults = getDefaultValue(values);\n      const editMode = gameStateProp.edit_mode;\n      const removable = gameStateProp.removable;\n      const editData = {name, type, ...defaults, editMode, removable};\n      AppLogicController.updateGameStateProp(dispatch, gameStateProp.id, editData).then(result => {\n        closeDrawer();\n        message.success('Game state prop edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  const getDefaultValue = (values) => {\n    if(!type.endsWith('arr')) { //not array\n      switch(type) {\n        case 'int':\n          return {defaultValue: parseInt(values.defaultValueInt)};\n        case 'boolean':\n          return {defaultValue: values.defaultValueBool};\n        case 'string':\n          return {defaultValue: values.defaultValueString};\n        case 'location':\n        case 'area':\n        case 'character':\n        default: //custom entity\n          let table;\n          if(type === 'location' || type === 'area' || type === 'character') {\n            table = type + 's';\n          } else {\n            table = 'custom_entities';\n          }\n          if(defaultValueEntity !== -1) {\n            return {defaultValue: defaultValueEntityName, defaultTable: table, defaultTids: defaultValueEntity};\n          } else {\n            return {defaultValue: null, defaultTable: table, defaultTids: null};\n          }\n      }\n    } else { //array\n      const defaultValues = values.defaultValueArray;\n      if(defaultValues.length === 0) {\n        return {defaultValue: ''};\n      }\n      const valuesArray = defaultValues.split('\\n');\n      switch(type) {\n        case 'intarr':\n        case 'booleanarr':\n          return {defaultValue: valuesArray.join(',')};\n        case 'stringarr':\n        case 'locationarr':\n        case 'areaarr':\n        case 'characterarr':\n        default: //custom entity array\n          let quotesWrappedEntries = [];\n          for (const entry of valuesArray) {\n            quotesWrappedEntries.push('\"' + entry + '\"');\n          }\n          return {defaultValue: quotesWrappedEntries.join(',')};\n      }\n    }\n  };\n\n  const isNameDisabled = () => {\n    if(gameStateProp === null) {\n      return false;\n    } else {\n      const editMode = gameStateProp.edit_mode.split('|');\n      return editMode.indexOf('all') < 0 && editMode.indexOf('name') < 0;\n    } \n  };\n\n  const isTypeDisabled = () => {\n    if(gameStateProp === null) {\n      return false;\n    } else {\n      const editMode = gameStateProp.edit_mode.split('|');\n      return editMode.indexOf('all') < 0 && editMode.indexOf('type') < 0;\n    } \n  };\n\n  const isDefaultDisabled = () => {\n    if(gameStateProp === null) {\n      return false;\n    } else {\n      const editMode = gameStateProp.edit_mode.split('|');\n      return editMode.indexOf('all') < 0 && editMode.indexOf('default') < 0;\n    } \n  };\n\n  return (\n    <Drawer\n      title={(gameStateProp === null) ? 'New prop' : 'Edit prop'}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-game-state-prop-id'>\n            {(gameStateProp === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-game-state-prop' id='add-edit-game-state-prop-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[{ required: true, message: 'Please enter a name' }]}\n            >\n              <Input placeholder=\"Please enter a name\" value={name} onChange={(e) => { setName(e.target.value) }} disabled={isNameDisabled()} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"type\"\n              label=\"Type\"\n              rules={[{ required: true, message: 'Please select a type' }]}\n            >\n              <Select value={type} onChange={(e) => { handleTypeChange(e) }} disabled={isTypeDisabled()}>\n                <Option value='int'>int</Option>\n                <Option value='intarr'>int[]</Option>\n                <Option value='boolean'>boolean</Option>\n                <Option value='booleanarr'>boolean[]</Option>\n                <Option value='string'>string</Option>\n                <Option value='stringarr'>string[]</Option>\n                <Option value='location'>location</Option>\n                <Option value='locationarr'>location[]</Option>\n                <Option value='area'>area</Option>\n                <Option value='areaarr'>area[]</Option>\n                <Option value='character'>character</Option>\n                <Option value='characterarr'>character[]</Option>\n                { customEntityDefs !== undefined && customEntityDefs.map((customEntityDef) =>\n                  <Fragment key={customEntityDef.singular_name}>\n                    <Option value={customEntityDef.singular_name}>{customEntityDef.singular_name}</Option>\n                    <Option value={customEntityDef.singular_name + 'arr'}>{customEntityDef.singular_name}[]</Option>\n                  </Fragment>\n                  )\n                }\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16} style={{display: (type === 'int' ? 'block' : 'none')}}>\n          <Col span={24}>\n            <Form.Item\n              name=\"defaultValueInt\"\n              label=\"Default value (int)\"\n              rules={[{ required: (type === 'int'), message: 'Please enter an integer' }]}\n            >\n              <InputNumber disabled={isDefaultDisabled()} placeholder=\"Please enter an integer\" value={defaultValueInt} onChange={(e) => { setDefaultValueInt(e) }} style={{width: '100%'}} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16} style={{display: (type === 'boolean' ? 'block' : 'none')}}>\n          <Col span={24}>\n            <Form.Item\n              name=\"defaultValueBool\"\n              label=\"Default value (boolean)\"\n            >\n              <Switch disabled={isDefaultDisabled()} checkedChildren=\"true\" unCheckedChildren=\"false\" checked={defaultValueBool} defaultChecked onChange={(e) => { setDefaultValueBool(e) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16} style={{display: (displaySingleLineDefaultField() ? 'block' : 'none')}}>\n          <Col span={24}>\n            <Form.Item\n              name=\"defaultValueString\"\n              label=\"Default value (string)\"\n              rules={[{ required: displaySingleLineDefaultField() && type !== 'string', message: 'Please enter a default value' }]}\n            >\n              <Input disabled={isDefaultDisabled()} placeholder=\"Please enter a default value\" value={defaultValueString} onChange={(e) => { setDefaultValueString(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16} style={{display: (displaySingleEntityDefaultField() ? 'block' : 'none')}}>\n          <Col span={24}>\n            <Form.Item\n              label=\"Default value\"\n            >\n              {displaySingleEntityDefaultField() &&\n                <EntitySelectorView entityType={type} value={defaultValueEntity} onChangeCallback={(e, n) => { setDefaultValueEntity(e); setDefaultValueEntityName(n); }} disabled={isDefaultDisabled()} placeholder=\"Please select a default value\" emptyOption={true} />\n              }\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16} style={{display: (displayArrayDefaultField() ? 'block' : 'none')}}>\n          <Col span={24}>\n            <Form.Item\n              name=\"defaultValueArray\"\n              label={'Default value (' + arrayFieldLabelAndPlaceholder() + ')'}\n            >\n              <TextArea disabled={isDefaultDisabled()} rows={10} placeholder={arrayFieldLabelAndPlaceholder(false) + ' Leave empty for empty array.'} value={defaultValueArray} onChange={(e) => { setDefaultValueArray(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditGameStateProp;\n","import { useState, useContext } from 'react';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport GameStateListItem from '../entity_views/GameStateListItem';\nimport { List, Row, Col, Typography, Button, message } from 'antd';\nimport AddEditGameStateProp from '../drawers/AddEditGameStateProp';\n\nconst { Text } = Typography;\n\nconst GameStateConfigSection = () => {\n  const [,dispatch] = useContext(AppContext);\n  const [addEditGameStatePropVisible, setAddEditGameStatePropVisible] = useState(false);\n  const [currentGameStateProp, setCurrentGameStateProp] = useState(null);\n\n  const gameStates = useLiveQuery(() => db.game_state_props.toArray());\n\n  const addGameStateProp = () => {\n    setCurrentGameStateProp(null);\n    setAddEditGameStatePropVisible(true);\n  };\n\n  const editGameStateProp = (gameStateProp) => {\n    setCurrentGameStateProp(gameStateProp);\n    setAddEditGameStatePropVisible(true);\n  };\n\n  const removeGameStateProp = (gameStateProp) => {\n    AppLogicController.deleteGameStateProp(dispatch, gameStateProp.id).then(result => {\n      message.success('Game state prop removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const header = (\n    <Row>\n      <Col span={6}><Text strong>Name</Text></Col>\n      <Col span={6}><Text strong>Type</Text></Col>\n      <Col span={8}><Text strong>Default</Text></Col>\n      <Col span={4}></Col>\n    </Row>\n  );\n\n  return (\n    <div>\n      { (gameStates !== undefined && gameStates.length > 0) && \n        <List\n          style={{marginBottom: '20px', maxWidth: '94%'}}\n          header={header}\n          dataSource={gameStates}\n          renderItem={item => (\n            <GameStateListItem\n              gameState={item}\n              onEditGameStateProp={() => { editGameStateProp(item); }} \n              onRemoveGameStateProp={() => { removeGameStateProp(item); }} \n            />\n          )}\n        />\n      }\n      <Button type='primary' onClick={addGameStateProp}>\n        Add Game State Prop\n      </Button>\n      <AddEditGameStateProp\n        gameStateProp={currentGameStateProp}\n        isDrawerVisible={addEditGameStatePropVisible} \n        onDrawerClose={() => { setAddEditGameStatePropVisible(false); }} \n      />\n    </div>\n  );\n};\n\nexport default GameStateConfigSection;","import { Card, Divider, Typography, Button, List, Row, Col, Popconfirm } from 'antd';\nimport { EnvironmentFilled } from '@ant-design/icons';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport '../../styles/components/LocationView.scss';\n\nconst { Text } = Typography;\n\nconst LocationView = ({ \n  location,  \n  canEdit = true, \n  canRemove = true,\n  onRemove = () => {},\n  onEdit = () => {},\n  onEditMap = () => {},\n  //\n  onAddArea = () => {},\n  onEditArea = () => {},\n  onRemoveArea = () => {},\n}) => {\n\n  const areas = useLiveQuery(() => db.areas.where('location_id').equals(location.id).toArray());\n\n  const options = [];\n  options.push(<Button key='edit-map' type='link' size='small' onClick={onEditMap}>Map</Button>);\n  if(canEdit) {\n    options.push(<Button key='edit-location' type='link' size='small' onClick={onEdit}>Edit</Button>);\n  }\n  if(canRemove) {\n    options.push(\n      <Popconfirm\n        key='remove-location'\n        title={`Are you sure you want to remove this location and all its areas?`}\n        onConfirm={onRemove}\n        onCancel={() => {}}\n        okText='Yes'\n        cancelText='No'\n        placement='bottomRight'\n      >\n        <Button type='link' size='small'>Remove</Button>\n      </Popconfirm>\n    );\n  }\n\n  const header = (\n    <Row>\n      <Col span={6}><Text strong>Area Name</Text></Col>\n      <Col span={12}><Text strong>Description</Text></Col>\n      <Col span={6}></Col>\n    </Row>\n  );\n\n  return (\n    <Card className='location-view' size='small' title={location.name} extra={options} headStyle={{ background: '#f5f5f5'}} >\n      <Text>{location.description}</Text>\n      <Divider />\n      { (areas !== undefined && areas.length > 0) && \n        <List\n          header={header}\n          dataSource={areas}\n          renderItem={area => (\n            <List.Item className='area-list-item'>\n              <Row>\n                <Col span={6}><EnvironmentFilled style={{color: area.color}} /> {area.name}</Col>\n                <Col span={12}>{area.description}</Col>\n                <Col span={6} style={{textAlign: 'right'}}>\n                  <Button type='link' size='small' onClick={() => { onEditArea(area) }}>Edit</Button>\n                  <Popconfirm\n                    title={`Are you sure you want to remove this area?`}\n                    onConfirm={() => { onRemoveArea(area) }}\n                    onCancel={() => {}}\n                    okText='Yes'\n                    cancelText='No'\n                    placement='bottomRight'\n                  >\n                    <Button type='link' size='small'>Remove</Button>\n                  </Popconfirm>\n                </Col>\n              </Row>\n            </List.Item>\n          )}\n        />\n      }\n      <Button type='default' size='small' onClick={onAddArea}>\n        Add Area\n      </Button>\n    </Card>\n  );\n};\n\nexport default LocationView;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\n\nconst { TextArea } = Input;\n\nconst AddEditLocation = ({ location = null, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      if (location) {\n        form.setFieldsValue({name: location.name, description: location.description});\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, location]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const name = values.name.trim();\n    const description = values.description.trim();\n    if(name === '' || description === ''){\n      closeDrawer();\n      message.error('Do not leave empty fields, sorry :(');\n      return;\n    }\n    const data = {name, description};\n    if (location === null) { //new location\n      AppLogicController.createNewLocation(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New location created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing location\n      AppLogicController.updateLocation(dispatch, location.id, data).then(result => {\n        closeDrawer();\n        message.success('Location edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  return (\n    <Drawer\n      title={(location === null) ? 'New location' : 'Edit location'}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-location-id'>\n            {(location === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-location' id='add-edit-location-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[{ required: true, message: 'Please enter a name' }]}\n            >\n              <Input placeholder=\"Please enter a name\" value={name} onChange={(e) => { setName(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"description\"\n              label=\"Description\"\n              rules={[{ required: true, message: 'Please enter a description' }]}\n            >\n              <TextArea rows={10} placeholder=\"Please enter a description\" value={description} onChange={(e) => { setDescription(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditLocation;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport ColorPicker from 'rc-color-picker';\nimport 'rc-color-picker/assets/index.css';\n\nconst { TextArea } = Input;\nconst DefaultColor = '#00ff00';\n\nconst AddEditArea = ({ area = null, location, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [color, setColor] = useState(DefaultColor);\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      if (area) {\n        form.setFieldsValue({name: area.name, description: area.description});\n        setColor(area.color);\n      } else {\n        setColor(DefaultColor);\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, area]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const name = values.name.trim();\n    const description = values.description.trim();\n    if(name === '' || description === ''){\n      closeDrawer();\n      message.error('Do not leave empty fields, sorry :(');\n      return;\n    }\n    let data = {name, description, color};\n    if (area === null) { //new area\n      data.location_id = location.id;\n      AppLogicController.createNewArea(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New area created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing area\n      AppLogicController.updateArea(dispatch, area.id, data).then(result => {\n        closeDrawer();\n        message.success('Area edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  return (\n    <Drawer\n      title={((area === null) ? 'New area' : 'Edit area') + ' in ' + (location && location.name)}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-area-id'>\n            {(area === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-area' id='add-edit-area-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[{ required: true, message: 'Please enter a name' }]}\n            >\n              <Input placeholder=\"Please enter a name\" value={name} onChange={(e) => { setName(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"description\"\n              label=\"Description\"\n              rules={[{ required: true, message: 'Please enter a description' }]}\n            >\n              <TextArea rows={10} placeholder=\"Please enter a description\" value={description} onChange={(e) => { setDescription(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={18}>Color</Col>\n          <Col span={6} style={{textAlign: 'right', marginBottom: 16}}>\n            <ColorPicker\n              animation='slide-up'\n              placement='bottomRight'\n              enableAlpha={false}\n              color={color}\n              onChange={(colors) => { setColor(colors.color) }}\n            />\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditArea;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Button, Switch, Row, Col, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport AppDataFetchController from '../../controllers/AppDataFetchController';\nimport EntitySelectorView from '../entity_views/EntitySelectorView';\nimport LocationMapUtils from '../../utils/LocationMapUtils';\nimport '../../styles/components/drawers/EditLocationMap.scss';\n\nconst EditLocationMap = ({ location = null, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [visible, setVisible] = useState(false);\n  const [setOrErase, setSetOrErase] = useState(true);\n  const [currentArea, setCurrentArea] = useState(null);\n  const [locationAreas, setLocationAreas] = useState(null);\n  const [currentMap, setCurrentMap] = useState({});\n\n  const locationMapDimension = LocationMapUtils.getLocationMapDimension();\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      setSetOrErase(true);\n      setCurrentArea(null);\n      setCurrentMap(LocationMapUtils.convertJsonMapToEditableObject(location.map));\n      loadAreas();\n      openDrawer();\n    }\n  }, [isDrawerVisible, location]); // eslint-disable-line\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const loadAreas = () => {\n    AppDataFetchController.fetchAreasByLocation(location.id).then((fetchedAreas) => {\n      setLocationAreas(fetchedAreas);\n    }).catch(error => {\n      console.log('||--FAIL', error);\n    });\n  };\n\n  const selectCurrentArea = (areaId) => {\n    const area = locationAreas.find(area => area.id === areaId);\n    setCurrentArea(area);\n  };\n\n  const handleMapClick = (e) => {\n    //col = x   row = y\n    let newMap;\n    if(e.target.dataset.col && e.target.dataset.row){\n      const position = e.target.dataset.col + '-' + e.target.dataset.row;\n      if(setOrErase) {\n        if(currentArea !== null) { //adding area\n          newMap = LocationMapUtils.setMapTile(Object.assign({}, currentMap), position, currentArea.id);\n          setCurrentMap(newMap);\n        }\n      } else { //erasing\n         newMap = LocationMapUtils.setMapTile(Object.assign({}, currentMap), position, null);\n         setCurrentMap(newMap);\n      }\n    }\n  };\n\n  const handleClearMap = () => {\n    setCurrentMap({});\n  };\n\n  const saveMap = () => {\n    const newJsonMap = LocationMapUtils.convertEditableObjectToJsonMap(currentMap);\n    const data = {map: newJsonMap};\n    AppLogicController.updateLocationMap(dispatch, location.id, data).then(result => {\n      closeDrawer();\n      message.success('Location map updated!');\n    }).catch(error => {\n      closeDrawer();\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const renderMap = () => {\n    const colors = locationAreas && locationAreas.reduce((result, area) => {\n      result[area.id] = area.color;\n      return result;\n    }, {});\n    let mapClasses = ['map-view-edit'];\n    let rows = [];\n    let position;\n    let color;\n    let columns;\n\n    for (let y = 0; y < locationMapDimension.y; y++) {\n      columns = [];\n      for (let x = 0; x < locationMapDimension.x; x++) {\n        position = x + '-' + y;\n        if (currentMap[position] && colors !== null) {\n          color = colors[currentMap[position]];\n          columns.push(<div className={`map-col map-col-${x}`} key={`map-col-${x}-${y}`} data-col={x} data-row={y} style={{backgroundColor: color, color: '#000'}}>{x}-{y}</div>);\n        } else {\n          columns.push(<div className={`map-col map-col-${x}`} key={`map-col-${x}-${y}`} data-col={x} data-row={y}>{x}-{y}</div>);\n        }\n      }\n      rows.push(<div className={`map-row map-row-${y}`} key={`map-row-${y}`}>{columns}</div>);\n    }\n    //add map classes\n    if(setOrErase) {\n      if(currentArea !== null) { //painting\n        mapClasses.push('painting');\n      }\n    } else { //erasing\n      mapClasses.push('erasing');\n    }\n    return (<div className={mapClasses.join(' ')} onClick={handleMapClick}>{rows}</div>);\n  };\n\n  return (\n    <Drawer\n      title={'Edit Map: ' + (location ? location.name : '')}\n      width={720}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type='primary' onClick={saveMap}>\n            Save\n          </Button>\n        </div>\n      }\n    >\n      <Row gutter={[8, 16]} style={{paddingBottom: 16}}>\n        <Col span={18}>\n          <Switch checkedChildren=\"SET\" unCheckedChildren=\"ERASE\" checked={setOrErase} onChange={(e) => { setSetOrErase(e) }} />\n        </Col>\n        <Col span={6} style={{textAlign: 'right'}}>\n          <Button type='default' size='small' onClick={handleClearMap}>Clear map</Button>\n        </Col>\n      </Row>\n      <Row gutter={[8, 16]} style={{display: (setOrErase ? 'block' : 'none'), paddingBottom: 16}}>\n        <Col span={24}>\n          <EntitySelectorView customFetch={visible ? 'areasByLocation' : null} customFetchParams={{locationId: location && location.id}} value={currentArea ? currentArea.id : null} onChangeCallback={(e, n) => { selectCurrentArea(e); }} placeholder=\"Area to set\" />\n        </Col>\n      </Row>\n      { renderMap() }\n    </Drawer>\n  );\n};\n\nexport default EditLocationMap;\n","import { useState, useContext } from 'react';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport { Button, message } from 'antd';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport LocationView from '../entity_views/LocationView';\nimport AddEditLocation from '../drawers/AddEditLocation';\nimport AddEditArea from '../drawers/AddEditArea';\nimport EditLocationMap from '../drawers/EditLocationMap';\n\nconst LocationConfigSection = () => {\n  const [,dispatch] = useContext(AppContext);\n  const [addEditLocationVisible, setAddEditLocationVisible] = useState(false);\n  const [editLocationMapVisible, setEditLocationMapVisible] = useState(false);\n  const [addEditAreaVisible, setAddEditAreaVisible] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [currentArea, setCurrentArea] = useState(null);\n\n  const locations = useLiveQuery(() => db.locations.toArray());\n\n  //location handlers\n  const addLocation = () => {\n    setCurrentLocation(null);\n    setAddEditLocationVisible(true);\n  };\n\n  const editLocation = (location) => {\n    setCurrentLocation(location);\n    setAddEditLocationVisible(true);\n  };\n\n  const editLocationMap = (location) => {\n    setCurrentLocation(location);\n    setEditLocationMapVisible(true);\n  };\n\n  const removeLocation = (location) => {\n    AppLogicController.deleteLocation(dispatch, location.id).then(result => {\n      message.success('Location removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  //area handlers\n  const addArea = (location) => {\n    setCurrentArea(null);\n    setCurrentLocation(location);\n    setAddEditAreaVisible(true);\n  };\n\n  const editArea = (area, location) => {\n    setCurrentLocation(location);\n    setCurrentArea(area);\n    setAddEditAreaVisible(true);\n  };\n\n  const removeArea = (area) => {\n    AppLogicController.deleteArea(dispatch, area.id).then(result => {\n      message.success('Area removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  return (\n    <div>\n      { locations !== undefined && locations.map(location =>\n        <LocationView \n          key={location.id} \n          location={location} \n          onRemove={() => { removeLocation(location) }} \n          onEdit={() => { editLocation(location) }} \n          onEditMap={() => { editLocationMap(location) }} \n          onAddArea={() => { addArea(location) }} \n          onEditArea={(area) => { editArea(area, location) }}\n          onRemoveArea={(area) => { removeArea(area) }}\n        />\n        )\n      }\n      <Button type='primary' onClick={addLocation}>\n        Add Location\n      </Button>\n      <AddEditLocation\n        location={currentLocation}\n        isDrawerVisible={addEditLocationVisible} \n        onDrawerClose={() => { setAddEditLocationVisible(false); }} \n      />\n      <EditLocationMap\n        location={currentLocation}\n        isDrawerVisible={editLocationMapVisible} \n        onDrawerClose={() => { setEditLocationMapVisible(false); }} \n      />\n      <AddEditArea\n        area={currentArea}\n        location={currentLocation}\n        isDrawerVisible={addEditAreaVisible} \n        onDrawerClose={() => { setAddEditAreaVisible(false); }} \n      />\n    </div>\n  );\n};\n\nexport default LocationConfigSection;\n","import { Card, Typography, Button, Popconfirm } from 'antd';\nimport { StarFilled } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nconst CharacterView = ({ \n  character, \n  canEdit = true, \n  canRemove = true,\n  onRemove = () => {},\n  onEdit = () => {},\n}) => {\n\n  const options = [];\n  if(canEdit) {\n    options.push(<Button key='edit-character' type='link' size='small' onClick={onEdit}>Edit</Button>);\n  }\n  if(canRemove) {\n    options.push(\n      <Popconfirm\n        key='remove-character'\n        title={`Are you sure you want to remove this character?`}\n        onConfirm={onRemove}\n        onCancel={() => {}}\n        okText='Yes'\n        cancelText='No'\n        placement='bottomRight'\n      >\n        <Button type='link' size='small'>Remove</Button>\n      </Popconfirm>\n    );\n  }\n\n  const title = character.name + '  (' + (character.is_pc ? 'PC' : 'NPC') + ')';\n  const iconAndTitle = <> <StarFilled style={{color: character.color}} /> {title} </>;\n\n  return (\n    <Card className='character-view' size='small' title={iconAndTitle} extra={options} headStyle={{ background: '#f5f5f5'}} style={{marginBottom: 16}} >\n      <Text>{character.description}</Text>\n    </Card>\n  );\n};\n\nexport default CharacterView;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Switch, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport ColorPicker from 'rc-color-picker';\nimport 'rc-color-picker/assets/index.css';\n\nconst { TextArea } = Input;\nconst DefaultColor = '#0000FF';\n\nconst AddEditCharacter = ({ character = null, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [isPC, setIsPC] = useState(false);\n  const [color, setColor] = useState(DefaultColor);\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      if (character) {\n        form.setFieldsValue({name: character.name, description: character.description, isPC: character});\n        setIsPC(character.is_pc);\n        setColor(character.color);\n      } else {\n        form.setFieldsValue({isPC: false});\n        setColor(DefaultColor);\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, character]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const name = values.name.trim();\n    const description = values.description.trim();\n    const isPC = values.isPC;\n    if(name === '' || description === ''){\n      closeDrawer();\n      message.error('Do not leave empty fields, sorry :(');\n      return;\n    }\n    const data = {name, description, isPC, color};\n    if (character === null) { //new character\n      AppLogicController.createNewCharacter(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New character created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing character\n      AppLogicController.updateCharacter(dispatch, character.id, data).then(result => {\n        closeDrawer();\n        message.success('Character edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  return (\n    <Drawer\n      title={(character === null) ? 'New character' : 'Edit character'}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-character-id'>\n            {(character === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-character' id='add-edit-character-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[{ required: true, message: 'Please enter a name' }]}\n            >\n              <Input placeholder=\"Please enter a name\" value={name} onChange={(e) => { setName(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"description\"\n              label=\"Description\"\n              rules={[{ required: true, message: 'Please enter a description' }]}\n            >\n              <TextArea rows={10} placeholder=\"Please enter a description\" value={description} onChange={(e) => { setDescription(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={18}>Color</Col>\n          <Col span={6} style={{textAlign: 'right', marginBottom: 16}}>\n            <ColorPicker\n              animation='slide-up'\n              placement='bottomRight'\n              enableAlpha={false}\n              color={color}\n              onChange={(colors) => { setColor(colors.color) }}\n            />\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"isPC\"\n              label=\"PC / NPC\"\n            >\n              <Switch checkedChildren=\"PC\" unCheckedChildren=\"NPC\" checked={isPC} onChange={(e) => { setIsPC(e) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditCharacter;\n","import { useState, useContext } from 'react';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport { Button, message } from 'antd';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport CharacterView from '../entity_views/CharacterView';\nimport AddEditCharacter from '../drawers/AddEditCharacter';\n\nconst CharacterConfigSection = () => {\n  const [,dispatch] = useContext(AppContext);\n  const [addEditCharacterVisible, setAddEditCharacterVisible] = useState(false);\n  const [currentCharacter, setCurrentCharacter] = useState(null);\n\n  const characters = useLiveQuery(() => db.characters.toArray());\n\n  const addCharacter = () => {\n    setCurrentCharacter(null);\n    setAddEditCharacterVisible(true);\n  };\n\n  const editCharacter = (character) => {\n    setCurrentCharacter(character);\n    setAddEditCharacterVisible(true);\n  };\n\n  const removeCharacter = (character) => {\n    AppLogicController.deleteCharacter(dispatch, character.id).then(result => {\n      message.success('Character removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  return (\n    <div>\n      { characters !== undefined && characters.map(character =>\n        <CharacterView \n          key={character.id} \n          character={character} \n          onRemove={() => { removeCharacter(character) }} \n          onEdit={() => { editCharacter(character) }} \n        />\n        )\n      }\n      <Button type='primary' onClick={addCharacter}>\n        Add Character\n      </Button>\n      <AddEditCharacter\n        character={currentCharacter}\n        isDrawerVisible={addEditCharacterVisible} \n        onDrawerClose={() => { setAddEditCharacterVisible(false); }} \n      />\n    </div>\n  );\n};\n\nexport default CharacterConfigSection;\n","import { Card, Typography, Button, Popconfirm } from 'antd';\nimport '../../styles/components/SimpleEntityView.scss';\n\nconst { Text } = Typography;\n\nconst SimpleEntityView = ({ \n  entity, \n  entityName = 'entity', \n  canEdit = true, \n  canRemove = true,\n  onRemove = () => {},\n  onEdit = () => {},\n}) => {\n\n  const options = [];\n  if(canEdit) {\n    options.push(<Button key='edit-entity' type='link' size='small' onClick={onEdit}>Edit</Button>);\n  }\n  if(canRemove) {\n    options.push(\n      <Popconfirm\n        key='remove-entity'\n        title={`Are you sure you want to remove this ${entityName}?`}\n        onConfirm={onRemove}\n        onCancel={() => {}}\n        okText='Yes'\n        cancelText='No'\n        placement='bottomRight'\n      >\n        <Button type='link' size='small'>Remove</Button>\n      </Popconfirm>\n    );\n  }\n\n  return (\n    <Card className='simple-entity-view' size='small' title={entity.name} extra={options} headStyle={{ background: '#f5f5f5'}} >\n      <Text>{entity.description}</Text>\n    </Card>\n  );\n};\n\nexport default SimpleEntityView;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\n\nconst { TextArea } = Input;\n\nconst AddEditCustomEntity = ({ entity = null, entityDef, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const singularCapitalized = entityDef.singular_name.toLowerCase().charAt(0).toUpperCase() + entityDef.singular_name.toLowerCase().slice(1);\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      if (entity) {\n        form.setFieldsValue({name: entity.name, description: entity.description});\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, entity]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const name = values.name.trim();\n    const description = values.description.trim();\n    if(name === '' || description === ''){\n      closeDrawer();\n      message.error('Do not leave empty fields, sorry :(');\n      return;\n    }\n    let data = {name, description};\n    if (entity === null) { //new entity\n      data.custom_entity_def_id = entityDef.id;\n      AppLogicController.createNewCustomEntity(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New ' + entityDef.singular_name.toLowerCase() + ' created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing entity\n      AppLogicController.updateCustomEntity(dispatch, entity.id, data).then(result => {\n        closeDrawer();\n        message.success(singularCapitalized + ' edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  return (\n    <Drawer\n      title={((entity === null) ? 'New' : 'Edit') + ' ' + entityDef.singular_name.toLowerCase()}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form={'add-edit-custom-entity-id-' + entityDef.key}>\n            {(entity === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name={'add-edit-custom-entity-' + entityDef.key} id={'add-edit-custom-entity-id-' + entityDef.key} form={form} onFinish={(values) => { onFinish(values) }} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[{ required: true, message: 'Please enter a name' }]}\n            >\n              <Input placeholder=\"Please enter a name\" value={name} onChange={(e) => { setName(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"description\"\n              label=\"Description\"\n              rules={[{ required: true, message: 'Please enter a description' }]}\n            >\n              <TextArea rows={10} placeholder=\"Please enter a description\" value={description} onChange={(e) => { setDescription(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditCustomEntity;\n","import { useState, useContext } from 'react';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport { Button, Popconfirm, message } from 'antd';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport SimpleEntityView from '../entity_views/SimpleEntityView';\nimport AddEditCustomEntity from '../drawers/AddEditCustomEntity';\n\nconst CustomEntityConfigSection = ({ entityDef }) => {\n  const [,dispatch] = useContext(AppContext);\n  const singularCapitalized = entityDef.singular_name.toLowerCase().charAt(0).toUpperCase() + entityDef.singular_name.toLowerCase().slice(1);\n  const [addEditCustomEntityVisible, setAddEditCustomEntityVisible] = useState(false);\n  const [currentCustomEntity, setCurrentCustomEntity] = useState(null);\n\n  const entities = useLiveQuery(() => db.custom_entities.where('custom_entity_def_id').equals(entityDef.id).toArray());\n\n  const addCustomEntity = () => {\n    setCurrentCustomEntity(null);\n    setAddEditCustomEntityVisible(true);\n  };\n\n  const editEntity = (entity) => {\n    setCurrentCustomEntity(entity);\n    setAddEditCustomEntityVisible(true);\n  };\n\n  const removeEntity = (entity) => {\n    AppLogicController.deleteCustomEntity(dispatch, entity.id).then(result => {\n      message.success(singularCapitalized + ' removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const onRemoveEntityDef = () => {\n    AppLogicController.deleteCustomEntityDef(dispatch, entityDef.id).then(result => {\n      message.success(entityDef.name + ' removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  return (\n    <div>\n      <div style={{textAlign: 'right', marginBottom: '20px'}} >\n        <Popconfirm\n          key='remove-entity-def'\n          title={`This section and all its content will be removed!! Are you sure you want to remove this entity?`}\n          onConfirm={onRemoveEntityDef}\n          onCancel={() => {}}\n          okText='Yes'\n          cancelText='No'\n          placement='bottomRight'\n        >\n          <Button type='default' danger>\n            Remove entity\n          </Button>\n        </Popconfirm>\n      </div>\n      { entities !== undefined && entities.map(entity =>\n        <SimpleEntityView \n          key={entity.id} \n          entity={entity} \n          entityName={entityDef.singular_name.toLowerCase()} \n          onRemove={() => { removeEntity(entity) }} \n          onEdit={() => { editEntity(entity) }} \n        />\n        )\n      }\n      <Button type='primary' onClick={addCustomEntity}>\n        Add {singularCapitalized}\n      </Button>\n      <AddEditCustomEntity\n        entity={currentCustomEntity}\n        entityDef={entityDef}\n        isDrawerVisible={addEditCustomEntityVisible} \n        onDrawerClose={() => { setAddEditCustomEntityVisible(false); }} \n      />\n    </div>\n  );\n};\n\nexport default CustomEntityConfigSection;\n","import { useState } from 'react';\nimport { Layout, Tabs, Button } from 'antd';\nimport '../../styles/components/pages/ConfigPage.scss';\nimport { PlusSquareOutlined, BgColorsOutlined } from '@ant-design/icons';\nimport AddCustomEntity from '../drawers/AddCustomEntity';\nimport EditColors from '../drawers/EditColors';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport GameStateConfigSection from '../sections/GameStateConfigSection';\nimport LocationConfigSection from '../sections/LocationConfigSection';\nimport CharacterConfigSection from '../sections/CharacterConfigSection';\nimport CustomEntityConfigSection from '../sections/CustomEntityConfigSection';\n\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nconst ConfigPage = () => {\n  const [addCustomEntityVisible, setAddCustomEntityVisible] = useState(false);\n  const [editColorsVisible, setEditColorsVisible] = useState(false);\n\n  const customEntityDefs = useLiveQuery(() => db.custom_entity_defs.toArray());\n\n  const addCustomEntityButton = <Button size='small' key='add-custom' icon={<PlusSquareOutlined />} onClick={() => { setAddCustomEntityVisible(true); }}>Add entity</Button>;\n\n  const colorsButton = <Button size='small' key='edit-colors' icon={<BgColorsOutlined />} style={{marginRight: '4px'}} onClick={() => { setEditColorsVisible(true); }}>Colors</Button>;\n\n  const buttons = [colorsButton, addCustomEntityButton];\n\n  return (\n    <>\n      <Content className='config-page'>\n        <Tabs type=\"card\" size=\"small\" tabBarExtraContent={<>{buttons}</>}>\n          <TabPane tab=\"Game State\" key=\"1\">\n            <GameStateConfigSection />\n          </TabPane>\n          <TabPane tab=\"Locations\" key=\"2\">\n            <LocationConfigSection />\n          </TabPane>\n          <TabPane tab=\"Characters\" key=\"3\">\n            <CharacterConfigSection />\n          </TabPane>\n          { customEntityDefs !== undefined && customEntityDefs.map((customEntityDef, index) =>\n              <TabPane tab={customEntityDef.name} key={index + 4}>\n                <CustomEntityConfigSection entityDef={customEntityDef} />\n              </TabPane>\n            )\n          }\n        </Tabs>\n      </Content>\n      <AddCustomEntity isDrawerVisible={addCustomEntityVisible} onDrawerClose={() => { setAddCustomEntityVisible(false); }} />\n      <EditColors isDrawerVisible={editColorsVisible} onDrawerClose={() => { setEditColorsVisible(false); }} />\n    </>\n  );\n};\n\nexport default ConfigPage;\n","import { Card, Typography, Button, Popconfirm, Divider } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\nimport '../../styles/components/entity_views/ActView.scss';\n\nconst { Text } = Typography;\n\nconst ActView = ({ \n  act,\n  actIndex = null,\n  totalActs = 0,\n  canEdit = true, \n  canRemove = true,\n  onRemove = () => {},\n  onEdit = () => {},\n  onMoveOrderUp = () => {},\n  onMoveOrderDown = () => {},\n}) => {\n\n  const options = [];\n  options.push(<Text key='act-type' type='success' style={{marginRight: '24px'}}>{(act.type === 'interactive') ? 'Interactive' : 'Sequence'}</Text>);\n  options.push(\n    <Button \n      type=\"default\"\n      key='move-up' \n      icon={<CaretUpOutlined />} \n      size='small' style={{marginRight: '4px'}} \n      disabled={actIndex === 0}\n      onClick={onMoveOrderUp} />\n  );\n  options.push(\n    <Button \n      type=\"default\" \n      key='move-down' \n      icon={<CaretDownOutlined />} \n      size='small' \n      style={{marginRight: '24px'}} \n      disabled={actIndex === (totalActs-1)}\n      onClick={onMoveOrderDown} />\n  );\n  if(canEdit) {\n    options.push(<Button key='edit-act' type='link' size='small' onClick={onEdit}>Edit</Button>);\n  }\n  if(canRemove) {\n    options.push(\n      <Popconfirm\n        key='remove-act'\n        title={() => { return (<p>Are you sure you want to remove this act?<br/>All sequence actions and end conditions associated will be removed.</p>); }}\n        onConfirm={onRemove}\n        onCancel={() => {}}\n        okText='Yes'\n        cancelText='No'\n        placement='bottomRight'\n      >\n        <Button type='link' size='small'>Remove</Button>\n      </Popconfirm>\n    );\n  }\n\n  const title = 'Act ' + act.order + ': ' + act.name;\n\n  return (\n    <Card className='act-view' size='small' title={title} extra={options} headStyle={{ background: '#d9d9d9'}} >\n      <Text>{act.description}</Text>\n      <Divider></Divider>\n      {(act.type === 'interactive')\n        ? \n          <Text strong>This act ends when:</Text>\n        : \n          <Text strong>This act contains ## steps</Text>\n      }\n    </Card>\n  );\n};\n\nexport default ActView;\n","import { useContext } from 'react';\nimport { Card, Typography, Button, Popconfirm, Collapse, message } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\nimport ActView from './ActView';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport { AppContext } from '../../stores/AppStore';\nimport '../../styles/components/entity_views/ChapterView.scss';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst ChapterView = ({ \n  chapter,\n  chapterIndex = null,\n  totalChapters = 0,\n  canEdit = true, \n  canRemove = true,\n  onRemove = () => {},\n  onEdit = () => {},\n  onMoveOrderUp = () => {},\n  onMoveOrderDown = () => {},\n  //\n  onAddAct = () => {},\n  onEditAct = () => {},\n  onRemoveAct = () => {},\n}) => {\n  const [,dispatch] = useContext(AppContext);\n\n  const acts = useLiveQuery(() => db.acts.where('chapter_id').equals(chapter.id).toArray() );\n\n  const options = [];\n  options.push(\n    <Button \n      type=\"default\"\n      key='move-up' \n      icon={<CaretUpOutlined />} \n      size='small' style={{marginRight: '4px'}} \n      disabled={chapterIndex === 0}\n      onClick={onMoveOrderUp} />\n  );\n  options.push(\n    <Button \n      type=\"default\" \n      key='move-down' \n      icon={<CaretDownOutlined />} \n      size='small' \n      style={{marginRight: '24px'}} \n      disabled={chapterIndex === (totalChapters-1)}\n      onClick={onMoveOrderDown} />\n  );\n  if(canEdit) {\n    options.push(<Button key='edit-chapter' type='link' size='small' onClick={onEdit}>Edit</Button>);\n  }\n  if(canRemove) {\n    options.push(\n      <Popconfirm\n        key='remove-chapter'\n        title={() => { return (<p>Are you sure you want to remove this chapter?<br/>All acts, sequence actions and end conditions associated will be removed.</p>); }}\n        onConfirm={onRemove}\n        onCancel={() => {}}\n        okText='Yes'\n        cancelText='No'\n        placement='bottomRight'\n      >\n        <Button type='link' size='small'>Remove</Button>\n      </Popconfirm>\n    );\n  }\n\n  const moveActUp = (act) => {\n    const orderInfo = {oldOrder: act.order, order: act.order - 1, chapter_id: chapter.id};\n    AppLogicController.updateActOrder(dispatch, act.id, orderInfo).then(result => {\n      //\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const moveActDown = (act) => {\n    const orderInfo = {oldOrder: act.order, order: act.order + 1, chapter_id: chapter.id};\n    AppLogicController.updateActOrder(dispatch, act.id, orderInfo).then(result => {\n      //\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const title = 'Chapter ' + chapter.order + ': ' + chapter.name;\n  const totalActs = (acts !== undefined) ? acts.length : 0;\n  const actsCollapseHeader = (totalActs === 0) ? 'No acts' : ((totalActs === 1) ? '1 act' : totalActs + ' acts');\n\n  return (\n    <Card className='chapter-view' size='small' title={title} extra={options} headStyle={{ background: '#f5f5f5'}} >\n      <Text>{chapter.description}</Text>\n      <Collapse defaultActiveKey={['1']} ghost>\n        <Panel header={actsCollapseHeader} key=\"1\">\n          { acts !== undefined && acts.sort((a, b) => { return a.order - b.order; }).map((act, index) =>\n            <ActView \n              key={act.id} \n              act={act}\n              actIndex={index} \n              totalActs={totalActs}\n              onRemove={() => { onRemoveAct(act) }} \n              onEdit={() => { onEditAct(act) }} \n              onMoveOrderUp={() => { moveActUp(act) }} \n              onMoveOrderDown={() => { moveActDown(act) }} \n            />\n            )\n          }\n          <Button type='default' size='small' onClick={() => { onAddAct(totalActs)}}>\n            Add Act\n          </Button>\n        </Panel>\n      </Collapse>\n    </Card>\n  );\n};\n/*\n              onMoveOrderUp={() => { moveCharpterUp(chapter) }} \n              onMoveOrderDown={() => { moveCharpterDown(chapter) }} */\n\nexport default ChapterView;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\n\nconst { TextArea } = Input;\n\nconst AddEditChapter = ({ chapter = null, totalChapters = 0, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [chapterIndex, setChapterIndex] = useState(0);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      if (chapter) {\n        form.setFieldsValue({name: chapter.name, description: chapter.description, chapterIndex: chapter.order});\n        setChapterIndex(chapter.order);\n      } else {\n        const index = totalChapters + 1;\n        form.setFieldsValue({chapterIndex: index});\n        setChapterIndex(index);\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, chapter, totalChapters]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const name = values.name.trim();\n    const description = values.description.trim();\n    if(name === '' || description === ''){\n      closeDrawer();\n      message.error('Do not leave empty fields, sorry :(');\n      return;\n    }\n    const data = {name, description, order: chapterIndex};\n    if (chapter === null) { //new chapter\n      AppLogicController.createNewChapter(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New chapter created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing chapter\n      AppLogicController.updateChapter(dispatch, chapter.id, data).then(result => {\n        closeDrawer();\n        message.success('Chapter edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  return (\n    <Drawer\n      title={(chapter === null) ? 'New chapter' : 'Edit chapter'}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-chapter-id'>\n            {(chapter === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-chapter' id='add-edit-chapter-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"chapterIndex\"\n              label=\"Chapter\"\n            >\n              <Input placeholder=\"#\" value={chapterIndex} disabled />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[{ required: true, message: 'Please enter a name' }]}\n            >\n              <Input placeholder=\"Please enter a name\" value={name} onChange={(e) => { setName(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"description\"\n              label=\"Description\"\n              rules={[{ required: true, message: 'Please enter a description' }]}\n            >\n              <TextArea rows={10} placeholder=\"Please enter a description\" value={description} onChange={(e) => { setDescription(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditChapter;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Radio, Typography, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\n\nconst { TextArea } = Input;\nconst { Text } = Typography;\n\nconst AddEditAct = ({ act = null, chapter = null, totalActs = 0, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [actIndex, setActIndex] = useState(0);\n  const [actType, setActType] = useState('interactive');\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      if (act) {\n        form.setFieldsValue({name: act.name, description: act.description, actIndex: act.order, actType: act.type});\n        setActIndex(act.order);\n      } else {\n        const index = totalActs + 1;\n        form.setFieldsValue({actIndex: index});\n        setActIndex(index);\n      }\n      setActType('interactive');\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, act, totalActs]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const name = values.name.trim();\n    const description = values.description.trim();\n    if(name === '' || description === ''){\n      closeDrawer();\n      message.error('Do not leave empty fields, sorry :(');\n      return;\n    }\n    const data = {name, description, order: actIndex, chapter_id: chapter.id, type: actType};\n    if (act === null) { //new act\n      AppLogicController.createNewAct(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New act created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing act\n      AppLogicController.updateAct(dispatch, act.id, data).then(result => {\n        closeDrawer();\n        message.success('Act edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  return (\n    <Drawer\n      title={(act === null) ? 'New act' : 'Edit act'}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-act-id'>\n            {(act === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-act' id='add-edit-act-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"actIndex\"\n              label=\"Act\"\n            >\n              <Input placeholder=\"#\" value={actIndex} disabled />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[{ required: true, message: 'Please enter a name' }]}\n            >\n              <Input placeholder=\"Please enter a name\" value={name} onChange={(e) => { setName(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"description\"\n              label=\"Description\"\n              rules={[{ required: true, message: 'Please enter a description' }]}\n            >\n              <TextArea rows={10} placeholder=\"Please enter a description\" value={description} onChange={(e) => { setDescription(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16} style={{display: (act === null ? 'block' : 'none')}}>\n          <Col span={24}>\n            <Form.Item\n              name=\"actType\"\n              label=\"Act type\"\n              initialValue='interactive'\n            >\n              <Radio.Group value={actType} onChange={(e) => { setActType(e.target.value) }} buttonStyle='solid'>\n                <Radio.Button value='interactive'>Interactive</Radio.Button>\n                <Radio.Button value='sequence'>Sequence</Radio.Button>\n              </Radio.Group>\n              <Text type='secondary' style={{display: 'block'}}>\n                { (actType === 'interactive') \n                  ? 'Interactive act allows player to choose different actions while act\\'s finished condition has not been accomplished' \n                  : 'Sequence act is used for predefined dialogs or fixed sequences (i.e. cinematics)' \n                }\n              </Text>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditAct;\n","import { useState, useContext } from 'react';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport { Button, message } from 'antd';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport db from '../../db/AppDatabase';\nimport ChapterView from '../entity_views/ChapterView';\nimport AddEditChapter from '../drawers/AddEditChapter';\nimport AddEditAct from '../drawers/AddEditAct';\n\nconst StorylineSection = ({ onAddEditCondition }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [addEditChapterVisible, setAddEditChapterVisible] = useState(false);\n  const [addEditActVisible, setAddEditActVisible] = useState(false);\n  const [currentChapter, setCurrentChapter] = useState(null);\n  const [currentAct, setCurrentAct] = useState(null);\n  const [currentChapterTotalActs, setCurrentChapterTotalActs] = useState(0);\n\n  const chapters = useLiveQuery(() => db.chapters.orderBy('order').toArray());\n\n  const addChapter = () => {\n    setCurrentChapter(null);\n    setAddEditChapterVisible(true);\n  };\n\n  const editCharpter = (chapter) => {\n    setCurrentChapter(chapter);\n    setAddEditChapterVisible(true);\n  };\n\n  const moveCharpterUp = (chapter) => {\n    const orderInfo = {oldOrder: chapter.order, order: chapter.order - 1};\n    AppLogicController.updateChapterOrder(dispatch, chapter.id, orderInfo).then(result => {\n      //\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const moveCharpterDown = (chapter) => {\n    const orderInfo = {oldOrder: chapter.order, order: chapter.order + 1};\n    AppLogicController.updateChapterOrder(dispatch, chapter.id, orderInfo).then(result => {\n      //\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const removeChapter = (chapter) => {\n    AppLogicController.deleteChapter(dispatch, chapter.id).then(result => {\n      message.success('Chapter removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  //act handlers\n  const addAct = (chapter, totalActs) => {\n    setCurrentAct(null);\n    setCurrentChapter(chapter);\n    setCurrentChapterTotalActs(totalActs);\n    setAddEditActVisible(true);\n  };\n\n  const editAct = (act, chapter) => {\n    setCurrentChapter(chapter);\n    setCurrentAct(act);\n    setAddEditActVisible(true);\n  };\n\n  const removeAct = (act, chapter) => {\n    AppLogicController.deleteAct(dispatch, act.id, chapter.id).then(result => {\n      message.success('Act removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const totalChapters = (chapters !== undefined) ? chapters.length : 0;\n\n  return (\n    <div>\n      { chapters !== undefined && chapters.map((chapter, index) =>\n        <ChapterView \n          key={chapter.id} \n          chapter={chapter}\n          chapterIndex={index} \n          totalChapters={totalChapters}\n          onRemove={() => { removeChapter(chapter) }} \n          onEdit={() => { editCharpter(chapter) }} \n          onMoveOrderUp={() => { moveCharpterUp(chapter) }} \n          onMoveOrderDown={() => { moveCharpterDown(chapter) }} \n          onAddAct={(totalActs) => { addAct(chapter, totalActs) }} \n          onEditAct={(act) => { editAct(act, chapter) }}\n          onRemoveAct={(act) => { removeAct(act, chapter) }}\n        />\n        )\n      }\n      <Button type='primary' onClick={addChapter}>\n        Add Chapter\n      </Button>\n      <Button type='primary' onClick={onAddEditCondition} style={{marginLeft: 20}}>\n        dev:ConditionEditor\n      </Button>\n      <AddEditChapter\n        chapter={currentChapter}\n        totalChapters={totalChapters}\n        isDrawerVisible={addEditChapterVisible} \n        onDrawerClose={() => { setAddEditChapterVisible(false); }} \n      />\n      <AddEditAct\n        act={currentAct}\n        chapter={currentChapter}\n        totalActs={currentChapterTotalActs}\n        isDrawerVisible={addEditActVisible} \n        onDrawerClose={() => { setAddEditActVisible(false); }} \n      />\n    </div>\n  );\n};\n\nexport default StorylineSection;\n","import { List, Row, Col, Button, Popconfirm } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\n\nconst SequencedActionListItem = ({\n  sequencedAction,\n  actionIndex,\n  totalActions,\n  characters,\n  onEditSequencedAction = () => {},\n  onRemoveSequencedAction = () => {},\n  onMoveSequencedActionUp = () => {},\n  onMoveSequencedActionDown = () => {},\n}) => {\n\n  const getCharacterName = (characterId) => {\n    if (characterId === -1) {\n      return '-';\n    }\n    if (characters) {\n      return characters.find(character => character.id === characterId).name;\n    }\n    return characterId;\n  };\n\n  return (\n    <List.Item>\n      <Row style={{width: '100%'}}>\n        <Col span={2}>{sequencedAction.order}</Col>\n        <Col span={10}>{sequencedAction.text_value}</Col>\n        <Col span={3}>{sequencedAction.type}</Col>\n        <Col span={3}>{getCharacterName(sequencedAction.character_id)}</Col>\n        <Col span={6} style={{textAlign: 'right'}}>\n          <Button \n            type=\"default\"\n            icon={<CaretUpOutlined />} \n            size='small' style={{marginRight: '4px'}} \n            disabled={actionIndex === 0}\n            onClick={onMoveSequencedActionUp} />\n          <Button \n            type=\"default\"  \n            icon={<CaretDownOutlined />} \n            size='small' \n            style={{marginRight: '24px'}} \n            disabled={actionIndex === (totalActions - 1)}\n            onClick={onMoveSequencedActionDown} />\n          <Button type='link' size='small' onClick={() => { onEditSequencedAction() }}>Edit</Button>\n          <Popconfirm\n            title={`Are you sure you want to remove this action?`}\n            onConfirm={() => { onRemoveSequencedAction() }}\n            onCancel={() => {}}\n            okText='Yes'\n            cancelText='No'\n            placement='bottomRight'\n          >\n            <Button type='link' size='small'>Remove</Button>\n          </Popconfirm>\n        </Col>\n      </Row>\n    </List.Item>\n  );\n};\n\nexport default SequencedActionListItem;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Radio, Typography, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport EntitySelectorView from '../entity_views/EntitySelectorView';\n\nconst { TextArea } = Input;\nconst { Text } = Typography;\n\nconst AddEditSequencedAction = ({ sequencedAction = null, act, totalActions = 0, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [actionIndex, setActionIndex] = useState(0);\n  const [textValue, setTextValue] = useState('');\n  const [sequencedActionType, setSequencedActionType] = useState('description'); // description || dialog\n  const [characterId, setCharacterId] = useState(-1);\n  \n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      if (sequencedAction) {\n        form.setFieldsValue({actionIndex: sequencedAction.order, textValue: sequencedAction.text_value, sequencedActionType: sequencedAction.type});\n        setActionIndex(sequencedAction.order);\n        setSequencedActionType(sequencedAction.type);\n        if(sequencedAction.type === 'dialog') {\n          setCharacterId(sequencedAction.character_id);\n        }else{\n          setCharacterId(-1);\n        }\n      } else {\n        const index = totalActions + 1;\n        form.setFieldsValue({actionIndex: index});\n        setActionIndex(index);\n        setSequencedActionType('description');\n        setCharacterId(-1);\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, sequencedAction, totalActions]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const textValue = values.textValue.trim();\n    if(textValue === ''){\n      message.error('Please provide some copy :(');\n      return;\n    }\n    if(sequencedActionType === 'dialog' && characterId === -1){\n      message.error('Dialog actions must have a character :(');\n      return;\n    }\n    let data = {actId: act.id, order: actionIndex, textValue: textValue, type: sequencedActionType};\n    if(sequencedActionType === 'dialog') {\n      data.characterId = characterId;\n    }else{\n      data.characterId = -1;\n    }\n    if (sequencedAction === null) { //new sequenced action\n      AppLogicController.createNewSequencedAction(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New sequenced action created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing sequenced action\n      AppLogicController.updateSequencedAction(dispatch, sequencedAction.id, data).then(result => {\n        closeDrawer();\n        message.success('Sequenced action edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  return (\n    <Drawer\n      title={(sequencedAction === null) ? 'New sequenced action' : 'Edit sequenced action'}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-sequenced-action-id'>\n            {(sequencedAction === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-sequenced-action' id='add-edit-sequenced-action-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              label=\"Order\"\n            >\n              <Input placeholder=\"#\" value={actionIndex} disabled />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"textValue\"\n              label=\"Text\"\n              rules={[{ required: true, message: 'Please enter some text' }]}\n            >\n              <TextArea rows={10} placeholder=\"Please enter some text\" value={textValue} onChange={(e) => { setTextValue(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              label=\"Type\"\n              initialValue='description'\n            >\n              <Radio.Group value={sequencedActionType} onChange={(e) => { setSequencedActionType(e.target.value) }} buttonStyle='solid'>\n                <Radio.Button value='description'>Description</Radio.Button>\n                <Radio.Button value='dialog'>Dialog</Radio.Button>\n              </Radio.Group>\n              <Text type='secondary' style={{display: 'block'}}>\n                { (sequencedActionType === 'description') \n                  ? 'General description of any sequential event' \n                  : 'An PC or NPC dialog'\n                }\n              </Text>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16} style={{display: ((sequencedActionType === 'dialog') ? 'block' : 'none')}}>\n          <Col span={24}>\n            <Form.Item\n              label=\"Character\"\n            >\n              <EntitySelectorView entityType={'character'} value={characterId} onChangeCallback={(e, n) => { setCharacterId(e); }} placeholder=\"Please select a character\" emptyOption={true} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditSequencedAction;\n","import { useState, useContext, useEffect } from 'react';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport { Button, message, Row, Col, Card, Typography, List } from 'antd';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport EntitySelectorView from '../entity_views/EntitySelectorView';\nimport SequencedActionListItem from '../entity_views/SequencedActionListItem';\nimport AddEditSequencedAction from '../drawers/AddEditSequencedAction';\nimport AppDataFetchController from '../../controllers/AppDataFetchController';\n\nconst { Text } = Typography;\n\nconst SequenceActionsSection = ({ sectionActive }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [characters, setCharacters] = useState(null);\n  const [currentActId, setCurrentActId] = useState(null);\n  const [currentSequencedAction, setCurrentSequencedAction] = useState(null);\n  const [addEditSequencedActionVisible, setAddEditSequencedActionVisible] = useState(false);\n  //live\n  const act = useLiveQuery(AppDataFetchController.fetchLiveAct(currentActId), [currentActId]);\n  const chapter = useLiveQuery(AppDataFetchController.fetchLiveChapter(act && act.chapter_id), [act]);\n  const actSequencedActions = useLiveQuery(AppDataFetchController.fetchLiveSequencedActionsByAct(currentActId), [currentActId]);\n\n  useEffect(() => {\n    if (sectionActive) {\n      loadCharacters();\n      setCurrentActId(null);\n    }\n  }, [sectionActive]);\n\n  const loadCharacters = () => {\n    AppDataFetchController.fetchStoryEntities('character').then((characters) => {\n      setCharacters(characters);\n    }).catch(error => {\n      setCharacters(null);\n      console.log('||--FAIL', error);\n    });\n  };\n\n  const selectCurrentAct = (actId) => {\n    setCurrentActId(actId);\n  };\n\n  const addSequencedAction = () => {\n    setCurrentSequencedAction(null);\n    setAddEditSequencedActionVisible(true);\n  };\n\n  const editSequencedAction = (sequencedAction) => {\n    setCurrentSequencedAction(sequencedAction);\n    setAddEditSequencedActionVisible(true);\n  };\n\n  const removeSequencedAction = (sequencedAction) => {\n    AppLogicController.deleteSequencedAction(dispatch, sequencedAction.id, sequencedAction.act_id).then(result => {\n      message.success('Sequenced action removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const moveSequencedActionUp = (sequencedAction) => {\n    const orderInfo = {oldOrder: sequencedAction.order, order: sequencedAction.order - 1, actId: sequencedAction.act_id};\n    AppLogicController.updateSequencedActionOrder(dispatch, sequencedAction.id, orderInfo).then(result => {\n      //\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const moveSequencedActionDown = (sequencedAction) => {\n    const orderInfo = {oldOrder: sequencedAction.order, order: sequencedAction.order + 1, actId: sequencedAction.act_id};\n    AppLogicController.updateSequencedActionOrder(dispatch, sequencedAction.id, orderInfo).then(result => {\n      //\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const actionsHeader = (\n    <Row>\n      <Col span={2}><Text strong>Order</Text></Col>\n      <Col span={10}><Text strong>Text</Text></Col>\n      <Col span={3}><Text strong>Type</Text></Col>\n      <Col span={3}><Text strong>Character</Text></Col>\n      <Col span={6} style={{textAlign: 'right'}}><Text strong>Options</Text></Col>\n    </Row>\n  );\n\n  const renderActTitle = () => {\n    let title = act && act.name;\n    if(chapter) {\n      title += ' (' + chapter.name + ')';\n    }\n    return title;\n  };\n\n  return (\n    <div>\n      <Row gutter={16}>\n        <Col span={16}>\n          <EntitySelectorView customFetch={sectionActive ? 'allSequencedActs' : null} value={currentActId} onChangeCallback={(e, n) => { selectCurrentAct(e); }} placeholder=\"Select an Act\" />\n        </Col>\n        <Col span={8} style={{display: 'flex', justifyContent: 'flex-end'}}>\n          <Button type='primary' onClick={addSequencedAction} disabled={currentActId === null}>\n            Add Action\n          </Button>\n        </Col>\n      </Row>\n      {act && \n        <Card size='small' title={renderActTitle()} headStyle={{ background: '#f5f5f5'}} style={{marginTop: 20}}>\n          {(actSequencedActions !== undefined && actSequencedActions.length > 0) \n            ?\n            <List\n              style={{marginBottom: '20px'}}\n              header={actionsHeader}\n              dataSource={actSequencedActions.sort((a, b) => { return a.order - b.order; })}\n              renderItem={(item, index) => (\n                <SequencedActionListItem\n                  sequencedAction={item}\n                  actionIndex={index}\n                  totalActions={actSequencedActions.length}\n                  characters={characters} \n                  onEditSequencedAction={() => { editSequencedAction(item) }} \n                  onRemoveSequencedAction={() => { removeSequencedAction(item) }}\n                  onMoveSequencedActionUp={() => { moveSequencedActionUp(item) }} \n                  onMoveSequencedActionDown={() => { moveSequencedActionDown(item) }} \n                />\n              )}\n            />\n            : \n            <Text>This act hasn't actions yet</Text>\n          }\n        </Card>\n      }\n      <AddEditSequencedAction \n        sequencedAction={currentSequencedAction}\n        act={act}\n        totalActions={actSequencedActions ? actSequencedActions.length : 0}\n        isDrawerVisible={addEditSequencedActionVisible} \n        onDrawerClose={() => { setAddEditSequencedActionVisible(false); }} \n      />\n    </div>\n  );\n};\n\nexport default SequenceActionsSection;\n","\nclass EditorUtils {\n  static getComparatorName(id) {\n    switch(id) {\n      case 'EQUALS': return 'Equals';\n      case 'NOT_EQUALS': return 'Not equals';\n      case 'LOWER': return 'Lower than';\n      case 'GREATER': return 'Greater than';\n      case 'IS_EMPTY': return 'Is empty';\n      case 'CONTAINS': return 'Contains';\n      case 'NOT_CONTAINS': return 'Not contains';\n      case 'SIZE_EQUALS': return 'Size equals';\n      case 'SIZE_LOWER': return 'Size lower than';\n      case 'SIZE_GREATER': return 'Size greater than';\n      default: return '';\n    }\n  }\n\n  static getComparatorsForPropType(propType) {\n    if(!propType.endsWith('arr')) { //not array\n      switch(propType) {\n        case 'int':\n          return [\n            {id: 'EQUALS', name: 'Equals'},\n            {id: 'NOT_EQUALS', name: 'Not equals'},\n            {id: 'LOWER', name: 'Lower than'},\n            {id: 'GREATER', name: 'Greater than'}\n          ];\n        case 'boolean':\n          return [\n            {id: 'EQUALS', name: 'Equals'},\n            {id: 'NOT_EQUALS', name: 'Not equals'}\n          ];\n        case 'string':\n        case 'location':\n        case 'area':\n        case 'character':\n        default: //custom entity\n          return [\n            {id: 'IS_EMPTY', name: 'Is empty'},\n            {id: 'EQUALS', name: 'Equals'},\n            {id: 'NOT_EQUALS', name: 'Not equals'}\n          ];\n      }\n    } else { //array\n      return [\n        {id: 'IS_EMPTY', name: 'Is empty'},\n        {id: 'CONTAINS', name: 'Contains'},\n        {id: 'NOT_CONTAINS', name: 'Not contains'},\n        {id: 'SIZE_EQUALS', name: 'Size equals'},\n        {id: 'SIZE_LOWER', name: 'Size lower than'},\n        {id: 'SIZE_GREATER', name: 'Size greater than'}\n      ];\n    }\n  }\n\n  static getInputTypeForExpression(propType, comparatorId) {\n    if(!propType.endsWith('arr')) { //not array\n      switch(propType) {\n        case 'int':\n          return 'TEXT_INT';\n        case 'boolean':\n          return 'BOOLEAN';\n        case 'string':\n          if(comparatorId !== 'IS_EMPTY') {\n            return 'TEXT_STRING';\n          } else {\n            return 'NONE';\n          }\n        case 'location':\n        case 'area':\n        case 'character':\n        default: //custom entity\n          if(comparatorId !== 'IS_EMPTY') {\n            return 'SELECTOR';\n          } else {\n            return 'NONE';\n          }\n      }\n    } else { //array\n      switch(comparatorId) {\n        case 'CONTAINS':\n        case 'NOT_CONTAINS':\n          switch(propType) {\n            case 'intarr':\n              return 'TEXT_INT';\n            case 'booleanarr':\n              return 'BOOLEAN';\n            case 'stringarr':\n              return 'TEXT_STRING';\n            case 'locationarr':\n            case 'areaarr':\n            case 'characterarr':\n            default: //custom entity array\n              return 'SELECTOR';\n          }\n        case 'SIZE_EQUALS': \n        case 'SIZE_LOWER': \n        case 'SIZE_GREATER':\n          return 'TEXT_INT';\n        case 'IS_EMPTY':\n        default:\n          return 'NONE';\n      }\n    }\n  }\n\n  static getEmptyExpression(name = null) {\n    let emptyExpression = {\n      gsProp: null,\n      gsPropType: null,\n      comp: null,\n      compId: null,\n      valueInputType: null,\n      value: null,\n      valueDisplay: null,\n    };\n    if(name) {\n      emptyExpression.name = name;\n    }\n    return emptyExpression;\n  }\n\n}\n\nexport default EditorUtils;\n","import { Select, Switch, Input, InputNumber, Tag } from 'antd';\nimport EditorUtils from './EditorUtils';\nimport EntitySelectorView from '../components/entity_views/EntitySelectorView';\nconst { Option } = Select;\n\nclass ConditionEditorUtils {\n  static renderGameStatePropsSelector(selectValue, onChangeCallback, gameStates) {\n    return (\n      <Select value={selectValue} onChange={(value) => { onChangeCallback(value) }} style={{width: '100%'}}>\n        { gameStates !== undefined && gameStates.map((gameState, index) => {\n            return (<Option key={index} value={index}>{gameState.name}</Option>);\n          })\n        }\n      </Select>\n    );\n  }\n\n  static renderComparatorSelector(propType, selectValue, onChangeCallback) {\n    return (\n      <Select value={selectValue} onChange={(value) => { onChangeCallback(value) }} style={{width: '100%'}}>\n        { propType && EditorUtils.getComparatorsForPropType(propType).map(comparator => {\n            return (<Option key={comparator.id} value={comparator.id}>{comparator.name}</Option>);\n          })\n        }\n      </Select>\n    );\n  }\n\n  static renderValueSelector(propType, valueInputType, fieldValue, onChangeCallback) {\n    switch(valueInputType) {\n      case 'BOOLEAN':\n        return (\n          <Switch checkedChildren=\"true\" unCheckedChildren=\"false\" checked={fieldValue} onChange={(e) => { onChangeCallback(e, null) }} />\n        );\n      case 'TEXT_STRING':\n        return (\n          <Input value={fieldValue} onChange={(e) => { onChangeCallback(e.target.value, null) }} />\n        );\n      case 'TEXT_INT':\n        return (\n          <InputNumber value={fieldValue} onChange={(e) => { onChangeCallback(e, null) }} style={{width: '100%'}} />\n        );\n      case 'SELECTOR':\n        const entityType = propType.endsWith('arr') ? propType.substring(0, propType.length-3) : propType;\n        return (\n          <EntitySelectorView entityType={entityType} value={fieldValue} onChangeCallback={onChangeCallback} />\n        );\n      case 'NONE':\n      default:\n        return null;\n    }\n  }\n\n  static renderConditionDisplay(condition) {\n    if (condition !== null && condition.display) {\n      let color;\n      let display;\n      let expressions = [];\n      condition.display.forEach((expression, index) => {\n        color = expression.type === 'logic' ? '#52c41a' : (expression.type === 'grouping' ? '#eb2f96' : '#1890ff');\n        if(expression.type === 'logic' || expression.type === 'grouping') {\n          display = expression.name;\n        } else {\n          let cmp = (<strong style={{color: '#333333'}}>{expression.comp}</strong>);\n          display = (<>{expression.propName} {cmp} {expression.value}</>);\n        }\n        expressions.push(<Tag key={index} color={color}>{display}</Tag>);\n      });\n      return expressions;\n    }\n    return null;\n  };\n\n}\n\nexport default ConditionEditorUtils;","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, message, Card, Typography, Switch } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport ConditionEditorUtils from '../../utils/ConditionEditorUtils';\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nconst AddEditSingleGameAction = ({ gameAction = null, type = 'inter', isDrawerVisible, onDrawerClose, onAddEditCondition }) => {\n  const [state, dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [requiredCondition, setRequiredCondition] = useState(null);\n  const [description, setDescription] = useState('');\n  const [allowRepeat, setAllowRepeat] = useState(true);\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      dispatch({type: 'UNSET_ACTIVE_CONDITION'});\n      form.resetFields();\n      if (gameAction) {\n        setAllowRepeat(gameAction.allow_repeat);\n        form.setFieldsValue({allowRepeat: gameAction.allow_repeat});\n        setRequiredCondition(gameAction.required_condition);\n      } else {\n        setAllowRepeat(true);\n        form.setFieldsValue({allowRepeat: true});\n        setRequiredCondition(null);\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, gameAction, dispatch]);\n\n  useEffect(() => {\n    if(state.activeConditionDone) {\n      setRequiredCondition(state.activeCondition);\n      console.log('||--activeCondition', state.activeCondition);\n    }\n  }, [state.activeConditionDone, state.activeCondition]);\n\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const changeCondition = () => {\n    dispatch({type: 'SET_ACTIVE_CONDITION', payload: requiredCondition});\n    onAddEditCondition();\n  };\n\n  const onFinish = (values) => {\n    const description = values.description.trim();\n    if(description === ''){\n      message.error('Please provide a valid description');\n      return;\n    }\n    if(requiredCondition === null) {\n      message.error('Please set a valid required condition');\n      return;\n    }\n\n    const data = {'description': description, allowRepeat: values.allowRepeat, requiredCondition: JSON.stringify(requiredCondition)};\n    console.log('storing', data);\n    if (gameAction === null) { //new gameAction\n      AppLogicController.createNewNoEffectAction(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New action created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing gameAction\n    //   AppLogicController.updateConversation(dispatch, conversation.id, data).then(result => {\n    //     closeDrawer();\n    //     message.success('Conversation edited!');\n    //   }).catch(error => {\n    //     closeDrawer();\n    //     message.error('Something went wrong, sorry :(');\n    //   });\n    }\n  };\n\n  const renderActionTypeTitle = () => {\n    let title = (gameAction === null) ? 'New ' : 'Edit ';\n    title += (type === 'nav') ? 'navigation action' : ((type === 'noeff') ? 'no-effect action' : 'interactive action');\n    return title;\n  };\n\n  const renderRequiredCondition = () => {\n    const expressions = ConditionEditorUtils.renderConditionDisplay(requiredCondition);\n    if(expressions !== null) {\n      return (<div style={{paddingBottom: 20}}>{expressions}</div>);\n    }\n    return null;\n  };\n\n  return (\n    <Drawer\n      title={renderActionTypeTitle()}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-gameaction-id'>\n            {(gameAction === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-gameaction' id='add-edit-gameaction-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16} style={{paddingBottom: 12}}>\n          <Col span={24}>\n            <Card size='small' className='low-padding border-title'>\n              <Title level={5} type='secondary'>Required condition</Title>\n              {renderRequiredCondition()}\n              {requiredCondition === null\n                ? <Button type='primary' size='small' onClick={onAddEditCondition}>Add condition</Button>\n                : <Button type='primary' size='small' onClick={changeCondition}>Change condition</Button>\n              }\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"description\"\n              label=\"Description\"\n              rules={[{ required: true, message: 'Please enter a description' }]}\n            >\n              <TextArea rows={10} placeholder=\"Please enter a description\" value={description} onChange={(e) => { setDescription(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"allowRepeat\"\n              label=\"Can be repeated:\"\n            >\n              <Switch checkedChildren=\"Yes\" unCheckedChildren=\"No\" checked={allowRepeat} onChange={(e) => { setAllowRepeat(e) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditSingleGameAction;\n","import { Row, Col, Card, Button } from 'antd';\nimport { useState } from 'react';\n// import { AppContext } from '../../stores/AppStore';\n// import AppLogicController from '../../controllers/AppLogicController';\n// import { Button, message, Row, Col, Card, Typography, List } from 'antd';\n// import { useLiveQuery } from 'dexie-react-hooks';\n// import EntitySelectorView from '../entity_views/EntitySelectorView';\n// import SequencedActionListItem from '../entity_views/SequencedActionListItem';\nimport AddEditSingleGameAction from '../drawers/AddEditSingleGameAction';\n// import AppDataFetchController from '../../controllers/AppDataFetchController';\n\n// const { Text } = Typography;\n\nconst NavigationActionsSection = ({ sectionActive }) => {\n  // const [,dispatch] = useContext(AppContext);\n  const [addEditSingleActionVisible, setAddEditSingleActionVisible] = useState(false);\n  // const [characters, setCharacters] = useState(null);\n  // const [currentActId, setCurrentActId] = useState(null);\n  // const [currentSequencedAction, setCurrentSequencedAction] = useState(null);\n  // const [addEditSequencedActionVisible, setAddEditSequencedActionVisible] = useState(false);\n  // //live\n  // const act = useLiveQuery(AppDataFetchController.fetchLiveAct(currentActId), [currentActId]);\n  // const chapter = useLiveQuery(AppDataFetchController.fetchLiveChapter(act && act.chapter_id), [act]);\n  // const actSequencedActions = useLiveQuery(AppDataFetchController.fetchLiveSequencedActionsByAct(currentActId), [currentActId]);\n\n  const addNavigationAction = () => {\n    setAddEditSingleActionVisible(true);\n  };\n\n  return (\n    <div>\n      <Row gutter={[0, 8]} style={{paddingBottom: 24}}>\n        <Col span={24}>\n          <Card size='small'>\n            <Button type='primary' onClick={addNavigationAction} style={{ marginRight: 8 }}>\n              Add Nav Action\n            </Button>\n            <Button type='primary' onClick={() => {}} style={{ marginRight: 8 }}>\n              Add Associated Nav Action\n            </Button>\n            <Button type='primary' onClick={() => {}}>\n              Add Nav Actions Matrix\n            </Button>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card size='small'>\n            Filters\n          </Card>\n        </Col>\n        <Col span={24}>\n          <p>List of actions</p>\n        </Col>\n      </Row>\n      <AddEditSingleGameAction \n        gameAction={null}\n        type='nav'\n        isDrawerVisible={addEditSingleActionVisible} \n        onDrawerClose={() => { setAddEditSingleActionVisible(false); }} \n      />\n    </div>\n  );\n};\n\nexport default NavigationActionsSection;\n","import { Row, Col, Card, Button } from 'antd';\nimport { useState } from 'react';\n// import { AppContext } from '../../stores/AppStore';\n// import AppLogicController from '../../controllers/AppLogicController';\n// import { Button, message, Row, Col, Card, Typography, List } from 'antd';\n// import { useLiveQuery } from 'dexie-react-hooks';\n// import EntitySelectorView from '../entity_views/EntitySelectorView';\n// import SequencedActionListItem from '../entity_views/SequencedActionListItem';\nimport AddEditSingleGameAction from '../drawers/AddEditSingleGameAction';\n// import AppDataFetchController from '../../controllers/AppDataFetchController';\n\n// const { Text } = Typography;\n\nconst InteractiveActionsSection = ({ sectionActive }) => {\n  // const [,dispatch] = useContext(AppContext);\n  const [addEditSingleActionVisible, setAddEditSingleActionVisible] = useState(false);\n  // const [characters, setCharacters] = useState(null);\n  // const [currentActId, setCurrentActId] = useState(null);\n  // const [currentSequencedAction, setCurrentSequencedAction] = useState(null);\n  // const [addEditSequencedActionVisible, setAddEditSequencedActionVisible] = useState(false);\n  // //live\n  // const act = useLiveQuery(AppDataFetchController.fetchLiveAct(currentActId), [currentActId]);\n  // const chapter = useLiveQuery(AppDataFetchController.fetchLiveChapter(act && act.chapter_id), [act]);\n  // const actSequencedActions = useLiveQuery(AppDataFetchController.fetchLiveSequencedActionsByAct(currentActId), [currentActId]);\n\n  const addInteractiveAction = () => {\n    setAddEditSingleActionVisible(true);\n  };\n\n  return (\n    <div>\n      <Row gutter={[0, 8]} style={{paddingBottom: 24}}>\n        <Col span={24}>\n          <Card size='small'>\n            <Button type='primary' onClick={addInteractiveAction} style={{ marginRight: 8 }}>\n              Add Interactive Action\n            </Button>\n            <Button type='primary' onClick={() => {}}>\n              Add Associated Interactive Action\n            </Button>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card size='small'>\n            Filters\n          </Card>\n        </Col>\n        <Col span={24}>\n          <p>List of actions</p>\n        </Col>\n      </Row>\n      <AddEditSingleGameAction \n        gameAction={null}\n        type='inter'\n        isDrawerVisible={addEditSingleActionVisible} \n        onDrawerClose={() => { setAddEditSingleActionVisible(false); }} \n      />\n    </div>\n  );\n};\n\nexport default InteractiveActionsSection;\n","import { Row, Col, Card, Button, List, Typography, Popconfirm, message } from 'antd';\nimport { useState, useContext } from 'react';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport { useLiveQuery } from 'dexie-react-hooks';\n// import EntitySelectorView from '../entity_views/EntitySelectorView';\n// import SequencedActionListItem from '../entity_views/SequencedActionListItem';\nimport AddEditSingleGameAction from '../drawers/AddEditSingleGameAction';\nimport AppDataFetchController from '../../controllers/AppDataFetchController';\nimport ConditionEditorUtils from '../../utils/ConditionEditorUtils';\n\nconst { Text } = Typography;\n\nconst NoEffectActionsSection = ({ sectionActive, onAddEditCondition }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [addEditSingleActionVisible, setAddEditSingleActionVisible] = useState(false);\n  // const [characters, setCharacters] = useState(null);\n  // const [currentActId, setCurrentActId] = useState(null);\n  // const [currentSequencedAction, setCurrentSequencedAction] = useState(null);\n  // const [addEditSequencedActionVisible, setAddEditSequencedActionVisible] = useState(false);\n  // //live\n  // const act = useLiveQuery(AppDataFetchController.fetchLiveAct(currentActId), [currentActId]);\n  // const chapter = useLiveQuery(AppDataFetchController.fetchLiveChapter(act && act.chapter_id), [act]);\n  // const actSequencedActions = useLiveQuery(AppDataFetchController.fetchLiveSequencedActionsByAct(currentActId), [currentActId]);\n  //live\n  const noeffActions = useLiveQuery(AppDataFetchController.fetchLiveNoEffectActions({}));\n\n  const addNoEffectAction = () => {\n    setAddEditSingleActionVisible(true);\n  };\n\n  const editNoEffectAction = () => {\n    //setAddEditSingleActionVisible(true);\n  };\n\n  const removeNoEffectAction = (noeffAction) => {\n    AppLogicController.deleteNoEffectAction(dispatch, noeffAction.id).then(result => {\n      message.success('Action removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const header = (\n    <Row>\n      <Col span={10}><Text strong>Required</Text></Col>\n      <Col span={10}><Text strong>Description</Text></Col>\n      <Col span={1}><Text strong>Repeat?</Text></Col>\n      <Col span={3}></Col>\n    </Row>\n  );\n\n  return (\n    <div>\n      <Row gutter={[0, 8]} style={{paddingBottom: 24}}>\n        <Col span={24}>\n          <Card size='small'>\n            <Button type='primary' onClick={addNoEffectAction}>\n              Add No-effect Action\n            </Button>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card size='small'>\n            Filters\n          </Card>\n        </Col>\n        <Col span={24}>\n          { (noeffActions !== undefined && noeffActions.length > 0) &&\n            <List\n              header={header}\n              dataSource={noeffActions}\n              renderItem={noeffAction => (\n                <List.Item className='noeff-action-list-item'>\n                  <Row style={{width: '100%'}}>\n                    <Col span={10}><div>{ConditionEditorUtils.renderConditionDisplay(JSON.parse(noeffAction.required_condition))}</div></Col>\n                    <Col span={10}>{noeffAction.description}</Col>\n                    <Col span={1}>{noeffAction.allow_repeat ? 'Yes' : 'No'}</Col>\n                    <Col span={3} style={{textAlign: 'right'}}>\n                      <Button type='link' size='small' onClick={() => { editNoEffectAction(noeffAction) }}>Edit</Button>\n                      <Popconfirm\n                        title={`Are you sure you want to remove this action?`}\n                        onConfirm={() => { removeNoEffectAction(noeffAction) }}\n                        onCancel={() => {}}\n                        okText='Yes'\n                        cancelText='No'\n                        placement='bottomRight'\n                      >\n                        <Button type='link' size='small'>Remove</Button>\n                      </Popconfirm>\n                    </Col>\n                  </Row>\n                </List.Item>\n              )}\n            />\n          }\n        </Col>\n      </Row>\n      <AddEditSingleGameAction \n        gameAction={null}\n        type='noeff'\n        isDrawerVisible={addEditSingleActionVisible} \n        onDrawerClose={() => { setAddEditSingleActionVisible(false); }} \n        onAddEditCondition={onAddEditCondition}\n      />\n    </div>\n  );\n};\n\nexport default NoEffectActionsSection;\n","import { List, Row, Col, Button, Popconfirm } from 'antd';\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\n\nconst DialogListItem = ({\n  dialog,\n  dialogIndex,\n  totalDialogs,\n  characters,\n  onEditDialog = () => {},\n  onRemoveDialog = () => {},\n  onMoveDialogUp = () => {},\n  onMoveDialogDown = () => {},\n}) => {\n\n  const getCharacterName = (characterId) => {\n    if (characterId === -1) {\n      return '-';\n    }\n    if (characters) {\n      return characters.find(character => character.id === characterId).name;\n    }\n    return characterId;\n  };\n\n  return (\n    <List.Item>\n      <Row style={{width: '100%'}}>\n        <Col span={2}>{dialog.order}</Col>\n        <Col span={13}>{dialog.dialog}</Col>\n        <Col span={3}>{getCharacterName(dialog.character_id)}</Col>\n        <Col span={6} style={{textAlign: 'right'}}>\n          <Button \n            type=\"default\"\n            icon={<CaretUpOutlined />} \n            size='small' style={{marginRight: '4px'}} \n            disabled={dialogIndex === 0}\n            onClick={onMoveDialogUp} />\n          <Button \n            type=\"default\"  \n            icon={<CaretDownOutlined />} \n            size='small' \n            style={{marginRight: '24px'}} \n            disabled={dialogIndex === (totalDialogs - 1)}\n            onClick={onMoveDialogDown} />\n          <Button type='link' size='small' onClick={() => { onEditDialog() }}>Edit</Button>\n          <Popconfirm\n            title={`Are you sure you want to remove this dialog?`}\n            onConfirm={() => { onRemoveDialog() }}\n            onCancel={() => {}}\n            okText='Yes'\n            cancelText='No'\n            placement='bottomRight'\n          >\n            <Button type='link' size='small'>Remove</Button>\n          </Popconfirm>\n        </Col>\n      </Row>\n    </List.Item>\n  );\n};\n\nexport default DialogListItem;\n","import { Card, Button, Popconfirm, Typography, List, Row, Col, Collapse } from 'antd';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport AppDataFetchController from '../../controllers/AppDataFetchController';\nimport DialogListItem from './DialogListItem';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst ConversationView = ({ \n  conversation,\n  characters,\n  onRemove = () => {},\n  onEdit = () => {},\n  //\n  onAddDialog = () => {},\n  onEditDialog = () => {},\n  onRemoveDialog = () => {},\n  onMoveDialogUp = () => {},\n  onMoveDialogDown = () => {},\n}) => {\n\n  const dialogs = useLiveQuery(AppDataFetchController.fetchLiveConversationDialogs(conversation && conversation.id), [conversation]);\n\n  const options = [];\n  options.push(<Button key='edit-conversation' type='link' size='small' onClick={onEdit}>Edit</Button>);\n  options.push(\n    <Popconfirm\n      key='remove-conversation'\n      title={`Are you sure you want to remove this conversation and all its dialogs?`}\n      onConfirm={onRemove}\n      onCancel={() => {}}\n      okText='Yes'\n      cancelText='No'\n      placement='bottomRight'\n    >\n      <Button type='link' size='small'>Remove</Button>\n    </Popconfirm>\n  );\n\n  const dialogsHeader = (\n    <Row>\n      <Col span={2}><Text strong>Order</Text></Col>\n      <Col span={13}><Text strong>Dialog</Text></Col>\n      <Col span={3}><Text strong>Character</Text></Col>\n      <Col span={6} style={{textAlign: 'right'}}><Text strong>Options</Text></Col>\n    </Row>\n  );\n\n  const totalDialogs = (dialogs !== undefined) ? dialogs.length : 0;\n  const dialogsCollapseHeader = (totalDialogs === 1) ? '1 dialog' : totalDialogs + ' dialogs';\n\n  return (\n    <Card className='conversation-view' size='small' title={conversation.name} extra={options} headStyle={{ background: '#f5f5f5'}} style={{marginBottom: 16}}>\n      {(dialogs !== undefined && dialogs.length > 0) \n        ?\n        <Collapse defaultActiveKey={['1']} ghost>\n          <Panel header={dialogsCollapseHeader} key=\"1\">\n            <List\n              style={{marginBottom: '20px'}}\n              header={dialogsHeader}\n              dataSource={dialogs.sort((a, b) => { return a.order - b.order; })}\n              renderItem={(item, index) => (\n                <DialogListItem\n                  dialog={item}\n                  dialogIndex={index}\n                  totalDialogs={dialogs.length}\n                  characters={characters} \n                  onEditDialog={() => { onEditDialog(item) }} \n                  onRemoveDialog={() => { onRemoveDialog(item) }}\n                  onMoveDialogUp={() => { onMoveDialogUp(item) }} \n                  onMoveDialogDown={() => { onMoveDialogDown(item) }} \n                />\n              )}\n            />\n          </Panel>\n        </Collapse>\n        : \n        <p><Text>This conversation hasn't dialogs yet</Text></p>\n      }\n      <Button type='default' size='small' onClick={() => { onAddDialog(totalDialogs)}}>\n        Add Dialog\n      </Button>\n    </Card>\n  );\n};\n\nexport default ConversationView;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\n\nconst AddEditConversation = ({ conversation = null, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      if (conversation) {\n        form.setFieldsValue({name: conversation.name});\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, conversation]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const name = values.name.trim();\n    if(name === ''){\n      message.error('Do not leave empty fields, sorry :(');\n      return;\n    }\n    const data = {name};\n    if (conversation === null) { //new conversation\n      AppLogicController.createNewConversation(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New conversation created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing conversation\n      AppLogicController.updateConversation(dispatch, conversation.id, data).then(result => {\n        closeDrawer();\n        message.success('Conversation edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  return (\n    <Drawer\n      title={(conversation === null) ? 'New conversation' : 'Edit conversation'}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-conversation-id'>\n            {(conversation === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-conversation' id='add-edit-conversation-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[{ required: true, message: 'Please enter a name' }]}\n            >\n              <Input placeholder=\"Please enter a name\" value={name} onChange={(e) => { setName(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditConversation;\n","import { useState, useEffect, useContext } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, message } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport EntitySelectorView from '../entity_views/EntitySelectorView';\n\nconst { TextArea } = Input;\n\nconst AddEditConversationDialog = ({ dialog = null, conversation, totalDialogs = 0, isDrawerVisible, onDrawerClose }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [form] = Form.useForm();\n  const [visible, setVisible] = useState(false);\n  const [dialogIndex, setDialogIndex] = useState(0);\n  const [textValue, setTextValue] = useState('');\n  const [characterId, setCharacterId] = useState(-1);\n  \n  useEffect(() => {\n    if(isDrawerVisible) { //opening drawer\n      form.resetFields();\n      if (dialog) {\n        form.setFieldsValue({dialogIndex: dialog.order, textValue: dialog.dialog});\n        setDialogIndex(dialog.order);\n        setCharacterId(dialog.character_id);\n      } else {\n        const index = totalDialogs + 1;\n        form.setFieldsValue({dialogIndex: index});\n        setDialogIndex(index);\n        setCharacterId(-1);\n      }\n      openDrawer();\n    }\n  }, [isDrawerVisible, form, dialog, totalDialogs]);\n\n  const openDrawer = () => {\n    setVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setVisible(false);\n    onDrawerClose && onDrawerClose();\n  };\n\n  const onFinish = (values) => {\n    const textValue = values.textValue.trim();\n    if(textValue === ''){\n      message.error('Please provide some copy for the dialog :(');\n      return;\n    }\n    if(characterId === -1){\n      message.error('Dialog must have a character :(');\n      return;\n    }\n    let data = {conversationId: conversation.id, order: dialogIndex, dialog: textValue, characterId: characterId};\n    if (dialog === null) { //new dialog\n      AppLogicController.createNewConversationDialog(dispatch, data).then(result => {\n        closeDrawer();\n        message.success('New dialog created!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    } else { //editing dialog\n      AppLogicController.updateConversationDialog(dispatch, dialog.id, data).then(result => {\n        closeDrawer();\n        message.success('Dialog edited!');\n      }).catch(error => {\n        closeDrawer();\n        message.error('Something went wrong, sorry :(');\n      });\n    }\n  };\n\n  return (\n    <Drawer\n      title={(dialog === null) ? 'New dialog' : 'Edit dialog'}\n      width={360}\n      onClose={closeDrawer}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 20 }}\n      footer={\n        <div style={{textAlign: 'right'}} >\n          <Button onClick={closeDrawer} style={{ marginRight: 8 }}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\" form='add-edit-dialog-id'>\n            {(dialog === null) ? 'Create' : 'Update'}\n          </Button>\n        </div>\n      }\n    >\n      <Form layout='vertical' name='add-edit-dialog' id='add-edit-dialog-id' form={form} onFinish={onFinish} requiredMark={false}>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              label=\"Order\"\n            >\n              <Input placeholder=\"#\" value={dialogIndex} disabled />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"textValue\"\n              label=\"Dialog\"\n              rules={[{ required: true, message: 'Please enter some text' }]}\n            >\n              <TextArea rows={10} placeholder=\"Please enter some text\" value={textValue} onChange={(e) => { setTextValue(e.target.value) }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              label=\"Character\"\n            >\n              <EntitySelectorView entityType={'character'} value={characterId} onChangeCallback={(e, n) => { setCharacterId(e); }} placeholder=\"Please select a character\" emptyOption={true} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n};\n\nexport default AddEditConversationDialog;\n","import { Row, Col, Card, Button, Typography, message } from 'antd';\nimport { useState, useContext, useEffect } from 'react';\nimport { AppContext } from '../../stores/AppStore';\nimport AppLogicController from '../../controllers/AppLogicController';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport ConversationView from '../entity_views/ConversationView';\nimport EntitySelectorView from '../entity_views/EntitySelectorView';\nimport AddEditConversation from '../drawers/AddEditConversation';\nimport AddEditConversationDialog from '../drawers/AddEditConversationDialog';\nimport AppDataFetchController from '../../controllers/AppDataFetchController';\n\nconst { Text } = Typography;\n\nconst ConversationsSection = ({ sectionActive }) => {\n  const [,dispatch] = useContext(AppContext);\n  const [characters, setCharacters] = useState(null);\n  const [addEditConversationVisible, setAddEditConversationVisible] = useState(false);\n  const [addEditConversationDialogVisible, setAddEditConversationDialogVisible] = useState(false);\n  const [currentConversation, setCurrentConversation] = useState(null);\n  const [currentDialog, setCurrentDialog] = useState(null);\n  const [currentConversationTotalDialogs, setCurrentConversationTotalDialogs] = useState(0);\n  const [filterCharacterId, setFilterCharacterId] = useState(-1);\n  //live\n  const conversations = useLiveQuery(AppDataFetchController.fetchLiveConversations({character: filterCharacterId}), [filterCharacterId]);\n\n  useEffect(() => {\n    if (sectionActive) {\n      setFilterCharacterId(-1);\n      loadCharacters();\n    }\n  }, [sectionActive]);\n\n  const loadCharacters = () => {\n    AppDataFetchController.fetchStoryEntities('character').then((characters) => {\n      setCharacters(characters);\n    }).catch(error => {\n      setCharacters(null);\n      console.log('||--FAIL', error);\n    });\n  };\n\n  const addConversation = () => {\n    setCurrentConversation(null);\n    setAddEditConversationVisible(true);\n  };\n\n  const editConversation = (conversation) => {\n    setCurrentConversation(conversation);\n    setAddEditConversationVisible(true);\n  };\n\n  const removeConversation = (conversation) => {\n    AppLogicController.deleteConversation(dispatch, conversation.id).then(result => {\n      message.success('Conversation removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const addConversationDialog = (conversation, totalDialogs) => {\n    setCurrentDialog(null);\n    setCurrentConversation(conversation);\n    setCurrentConversationTotalDialogs(totalDialogs);\n    setAddEditConversationDialogVisible(true);\n  };\n\n  const editConversationDialog = (dialog, conversation) => {\n    setCurrentConversation(conversation);\n    setCurrentDialog(dialog);\n    setAddEditConversationDialogVisible(true);\n  };\n\n  const removeConversationDialog = (dialog, conversation) => {\n    AppLogicController.deleteConversationDialog(dispatch, dialog.id, conversation.id).then(result => {\n      message.success('Dialog removed!');\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const moveConversationDialogUp = (dialog, conversation) => {\n    const orderInfo = {oldOrder: dialog.order, order: dialog.order - 1, conversationId: conversation.id};\n    AppLogicController.updateConversationDialogOrder(dispatch, dialog.id, orderInfo).then(result => {\n      //\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const moveConversationDialogDown = (dialog, conversation) => {\n    const orderInfo = {oldOrder: dialog.order, order: dialog.order + 1, conversationId: conversation.id};\n    AppLogicController.updateConversationDialogOrder(dispatch, dialog.id, orderInfo).then(result => {\n      //\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  return (\n    <div>\n      <Row gutter={[0, 8]} style={{paddingBottom: 24}}>\n        <Col span={24}>\n          <Card size='small'>\n            <Button type='primary' onClick={addConversation}>\n              Add Conversation\n            </Button>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card size='small'>\n            <Row gutter={[16, 0]} justify='start' align='middle'>\n              <Col span={2}>\n                <Text type='secondary'>Filters</Text>\n              </Col>\n              <Col span={6}>\n                <EntitySelectorView entityType={'character'} value={filterCharacterId} onChangeCallback={(e, n) => { setFilterCharacterId(e); }} placeholder=\"Filter character\" emptyOption={true} emptyOptionLabel='Filter character' />\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col span={24}>\n          { conversations !== undefined && conversations.map(conversation =>\n            <ConversationView \n              key={conversation.id} \n              conversation={conversation} \n              characters={characters}\n              onRemove={() => { removeConversation(conversation) }} \n              onEdit={() => { editConversation(conversation) }} \n              onAddDialog={(totalDialogs) => { addConversationDialog(conversation, totalDialogs) }} \n              onEditDialog={(dialog) => { editConversationDialog(dialog, conversation) }}\n              onRemoveDialog={(dialog) => { removeConversationDialog(dialog, conversation) }}\n              onMoveDialogUp={(dialog) => { moveConversationDialogUp(dialog, conversation) }}\n              onMoveDialogDown={(dialog) => { moveConversationDialogDown(dialog, conversation) }}\n            />\n            )\n          }\n        </Col>\n      </Row>\n      <AddEditConversation\n        conversation={currentConversation}\n        isDrawerVisible={addEditConversationVisible} \n        onDrawerClose={() => { setAddEditConversationVisible(false); }} \n      />\n      <AddEditConversationDialog\n        dialog={currentDialog}\n        conversation={currentConversation}\n        totalDialogs={currentConversationTotalDialogs}\n        isDrawerVisible={addEditConversationDialogVisible} \n        onDrawerClose={() => { setAddEditConversationDialogVisible(false); }} \n      />\n    </div>\n  );\n};\n\nexport default ConversationsSection;\n","import { List, Row, Col } from 'antd';\nimport ConditionEditorUtils from '../../utils/ConditionEditorUtils';\nimport EditorUtils from '../../utils/EditorUtils';\n\nconst ComplexConditionExpressionListItem = ({\n  expression,\n  gameStates,\n  onChange,\n}) => {\n\n  const handleExpressionGSPropChange = (value) => {\n    const exp = expression;\n    const prop = gameStates[value];\n    exp.gsProp = prop.name;\n    exp.gsPropType = prop.type;\n    exp.comp = null;\n    exp.compId = null;\n    exp.valueInputType = null;\n    exp.value = null;\n    exp.valueDisplay = null;\n    onChange(exp);\n  };\n\n  const handleExpressionComparatorChange = (value) => {\n    const exp = expression;\n    exp.compId = value;\n    exp.valueInputType = EditorUtils.getInputTypeForExpression(exp.gsPropType, exp.compId);\n    exp.value = null;\n    exp.valueDisplay = null;\n    onChange(exp);\n  };\n\n  const handleExpressionValueChange = (value, valueDisplay) => {\n    const exp = expression;\n    exp.value = value;\n    exp.valueDisplay = valueDisplay;\n    onChange(exp);\n  };\n\n\n  return (\n    <List.Item className='complex-condition-expression-list-item'>\n      <Row gutter={[24, 8]} style={{width: '100%'}}>\n        <Col span={4}>{expression.name}</Col>\n        <Col span={7}>\n          {ConditionEditorUtils.renderGameStatePropsSelector(expression.gsProp, handleExpressionGSPropChange, gameStates)}\n        </Col>\n        <Col span={6} style={{display: (expression.gsProp !== null ? 'block' : 'none')}}>\n          {ConditionEditorUtils.renderComparatorSelector(expression.gsPropType, expression.compId, handleExpressionComparatorChange)}\n        </Col>\n        <Col span={7} style={{display: (expression.compId !== null && expression.compId !== 'IS_EMPTY' ? 'block' : 'none')}}>\n          {ConditionEditorUtils.renderValueSelector(expression.gsPropType, expression.valueInputType, expression.value, handleExpressionValueChange)}\n        </Col>\n      </Row>\n    </List.Item>\n  );\n};\n\nexport default ComplexConditionExpressionListItem;\n","import { useState } from 'react';\nimport { Layout, Tabs } from 'antd';\nimport '../../styles/components/pages/StoryPage.scss';\nimport StorylineSection from '../sections/StorylineSection';\nimport SequenceActionsSection from '../sections/SequenceActionsSection';\nimport NavigationActionsSection from '../sections/NavigationActionsSection';\nimport InteractiveActionsSection from '../sections/InteractiveActionsSection';\nimport NoEffectActionsSection from '../sections/NoEffectActionsSection';\nimport ConversationsSection from '../sections/ConversationsSection';\nimport ConditionEditor from '../drawers/ConditionEditor';\n\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nconst StoryPage = () => {\n  const [conditionEditorVisible, setConditionEditorVisible] = useState(false);\n  const [tab, setTab] = useState('1');\n\n  const tabChange = (key) => {\n    setTab(key);\n  };\n\n  const addEditCondition = () => {\n    setConditionEditorVisible(true);\n  };\n\n  // const editCondition = (condition) => {\n\n  // };\n\n  return (\n    <>\n      <Content className='story-page'>\n        <Tabs type='card' size='small' onChange={tabChange}>\n          <TabPane tab='Storyline (Plot)' key='1'>\n            <StorylineSection onAddEditCondition={() => { addEditCondition() }} />\n          </TabPane>\n          <TabPane tab='Sequenced Actions' key='2'>\n            <SequenceActionsSection sectionActive={tab === '2'} />\n          </TabPane>\n          <TabPane tab='Navigation Actions' key='3'>\n            <NavigationActionsSection sectionActive={tab === '3'} />\n          </TabPane>\n          <TabPane tab='Interactive Actions' key='4'>\n            <InteractiveActionsSection sectionActive={tab === '4'} />\n          </TabPane>\n          <TabPane tab='No-Effect Actions' key='5'>\n            <NoEffectActionsSection sectionActive={tab === '5'} onAddEditCondition={() => { addEditCondition() }} />\n          </TabPane>\n          <TabPane tab='Conversations' key='6'>\n            <ConversationsSection sectionActive={tab === '6'} />\n          </TabPane>\n        </Tabs>\n      </Content>\n      <ConditionEditor isDrawerVisible={conditionEditorVisible} onDrawerClose={() => { setConditionEditorVisible(false); }} />\n    </>\n  );\n};\n\nexport default StoryPage;\n","import { useState, useEffect, useContext } from 'react';\nimport { AppContext } from '../stores/AppStore';\nimport { Affix, Button, message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport AppLogicController from '../controllers/AppLogicController';\nimport '../styles/components/PlayActions.scss';\n\nconst PlayActions = () => {\n  const [state, dispatch] = useContext(AppContext);\n  const [shouldRenderPlayMessage, setShouldRenderPlayMessage] = useState(true);\n\n  useEffect(() => {\n    setShouldRenderPlayMessage(false);\n    setTimeout(() => {\n      setShouldRenderPlayMessage(true);\n    }, 5);\n  }, [state.storyVerifyingRunnable]);\n\n  const runPlaytest = () => {\n    AppLogicController.startNewPlayTestRun(dispatch).then(() => {\n      const searchParams = new URLSearchParams();\n      searchParams.set('play', 'true');\n      const url = window.location.href + '?' + searchParams.toString();\n      const newWindow = window.open(url, '_blank', 'noopener,noreferrer');\n      if (newWindow) newWindow.opener = null;\n    }).catch(error => {\n      message.error('Something went wrong, sorry :(');\n    });\n  };\n\n  const renderPlayMessage = () => {\n    let playMessage;\n    if (state.storyVerifyingRunnable) {\n      playMessage = <LoadingOutlined />;\n    } else {\n      if (state.storyRunnable) {\n        playMessage = <span>You're all set!! Play your story.</span>;\n      } else {\n        playMessage = <span>Please check \"Story validation\" tab.</span>;\n      }\n    }\n    return (\n      <p style={{marginBottom: 0, marginRight: 8}}>{playMessage}</p>\n    );\n  };\n\n  return (\n    <Affix>\n      <div className='play-actions'>\n        {shouldRenderPlayMessage && renderPlayMessage()}\n        <Button type='primary' disabled={!state.storyRunnable} onClick={runPlaytest}>\n          RUN PLAYTEST\n        </Button>\n      </div>\n    </Affix>\n  );\n};\n\nexport default PlayActions;\n","import { useState } from 'react';\nimport { Row, Col, Card, Typography, Switch } from 'antd';\nimport '../../styles/components/sections/PlaytestConfigurationSection.scss';\n\nconst { Title, Paragraph, Text } = Typography;\n\nconst PlaytestConfigurationSection = () => {\n  //demo configs\n  const [groupPlayerInventory, setGroupPlayerInventory] = useState(false);\n  const [showAchievements, setShowAchievements] = useState(false);\n\n  return (\n    <div className='playtest-configuration-section'>\n      <Row gutter={[24, 24]} style={{paddingBottom: 24}}>\n        <Col span={24}>\n          <Card className={`run-configuration ${groupPlayerInventory ? 'enabled-state' : ''}`}>\n            <div style={{flex: 1}}>\n              <Title level={5}>Group player inventory</Title>\n              <Paragraph><Text type='secondary'>Show inventory props in separate group</Text></Paragraph>\n            </div>\n            <Switch onChange={(e) => { setGroupPlayerInventory(e) }} />\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card className={`run-configuration ${showAchievements ? 'enabled-state' : ''}`}>\n            <div style={{flex: 1}}>\n              <Title level={5}>Show player achievements</Title>\n              <Paragraph><Text type='secondary'>Display notifications when player accomplish objectives, obtain items, etc</Text></Paragraph>\n            </div>\n            <Switch onChange={(e) => { setShowAchievements(e) }} />\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card className={`run-configuration`}>\n            <div style={{flex: 1}}>\n              <Title level={5}>Focus Game state props</Title>\n              <Paragraph><Text type='secondary'>Analyze specific properties in play mode</Text></Paragraph>\n            </div>\n            <Text>TBD</Text>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default PlaytestConfigurationSection;\n","import { Row, Col, Card } from 'antd';\n\nconst StoryValidationSection = () => {\n\n  return (\n    <div className='story-validation-section' style={{width: '80%', margin: '0 auto'}}>\n      <Row gutter={[4, 4]} style={{paddingBottom: 24}}>\n        <Col span={24}>\n          <Card>\n            <p>Card content</p>\n            <p>Card content</p>\n            <p>Card content</p>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card>\n            <p>Card content</p>\n            <p>Card content</p>\n            <p>Card content</p>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card>\n            <p>Card content</p>\n            <p>Card content</p>\n            <p>Card content</p>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default StoryValidationSection;\n","import { useState, useEffect, useContext } from 'react';\nimport { Layout, Tabs } from 'antd';\nimport { AppContext } from '../../stores/AppStore';\nimport { CloseCircleOutlined, CheckCircleOutlined, LoadingOutlined } from '@ant-design/icons';\nimport PlayActions from '../PlayActions';\nimport PlaytestConfigurationSection from '../sections/PlaytestConfigurationSection';\nimport StoryValidationSection from '../sections/StoryValidationSection';\nimport '../../styles/components/pages/PlayModePage.scss';\n\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nconst PlayModePage = () => {\n  const [state] = useContext(AppContext);\n  const [shouldRenderTabTitle, setShouldRenderTabTitle] = useState(true);\n\n  useEffect(() => {\n    setShouldRenderTabTitle(false);\n    setTimeout(() => {\n      setShouldRenderTabTitle(true);\n    }, 5);\n  }, [state.storyVerifyingRunnable]);\n\n\n  const renderValidationTabTitle = () => {\n    let statusIcon;\n    if (state.storyVerifyingRunnable) {\n      statusIcon = <LoadingOutlined style={{marginLeft: 8}} />;\n    } else {\n      if (state.storyRunnable) {\n        statusIcon = <CheckCircleOutlined style={{color: '#389e0d', marginLeft: 8}} />;\n      } else {\n        statusIcon = <CloseCircleOutlined style={{color: '#cf1322', marginLeft: 8}} />;\n      }\n    }\n    return (\n      <span>\n        Story validation {statusIcon}\n      </span>\n    );\n  };\n\n  return (\n    <>\n      <PlayActions />\n      <Content className='play-mode-page'>\n        <Tabs type='card' size='small'>\n          <TabPane tab=\"Playtest configuration\" key=\"1\">\n            <PlaytestConfigurationSection />\n          </TabPane>\n          <TabPane tab={shouldRenderTabTitle && renderValidationTabTitle()} key=\"2\">\n            <StoryValidationSection />\n          </TabPane>\n        </Tabs>\n      </Content>\n    </>\n  );\n};\n\nexport default PlayModePage;\n","//-- Components --//\nimport React, { useEffect, useContext } from 'react';\nimport { Layout, Typography, Spin } from 'antd';\nimport AppNav from './components/AppNav';\nimport StoryTitle from './components/StoryTitle';\nimport EmptyProjectPage from './components/pages/EmptyProjectPage';\nimport ConfigPage from './components/pages/ConfigPage';\nimport StoryPage from './components/pages/StoryPage';\nimport PlayModePage from './components/pages/PlayModePage';\n//-- Context --//\nimport { AppContext } from './stores/AppStore';\n//-- Controller --//\nimport AppLogicController from './controllers/AppLogicController';\n//-- Images --//\nimport logo from './images/logo192.png';\n\n\nconst { Text } = Typography;\n\nconst AppLayout = () => {\n  const [state, dispatch] = useContext(AppContext);\n\n  useEffect(() => {\n    //Mount\n    AppLogicController.checkDatabaseOk(dispatch);\n    AppLogicController.checkStoryLoaded(dispatch);\n\n  }, []); // eslint-disable-line\n\n  if(!state.initialCheckDone || state.globalLoading) {\n    return (\n      <div className='app loading'>\n        <img src={logo} alt='RPG Story Playtesting' />\n        <Spin size='large' />\n      </div>\n    );\n    \n  }\n\n  if(state.databaseLoadError) {\n    return (\n      <Text style={{display: 'block', textAlign: 'center', paddingTop: 50}}>\n        This application requires IndexedDB. Please use a browser that supports this feature.\n      </Text>\n    );\n  }\n\n  if(state.storyLoadError) {\n    return (\n      <Text style={{display: 'block', textAlign: 'center', paddingTop: 50}}>\n        We were unable to load your story, please reload and make sure your file/url contains a RPG-SP story.<br />\n        {state.storyErrorMessage !== null && 'Error info: ' + state.storyErrorMessage}\n      </Text>\n    );\n  }\n\n  let currentPage = null;\n  if(state.storyLoaded) {\n    switch(state.page) {\n      case 'PLAYMODE': currentPage = PlayModePage; break;\n      case 'STORY': currentPage = StoryPage; break;\n      case 'CONFIG': currentPage = ConfigPage; break;\n      default: currentPage = ConfigPage; break;\n    }\n  }\n  \n\n  return (\n    <div className=\"app\">\n      <Layout>\n        <AppNav />\n        <Layout className=\"app-layout\">\n          {state.storyLoaded\n            ?\n              <>\n                <StoryTitle />\n                {React.createElement(currentPage)}\n              </>\n            : \n              <EmptyProjectPage />\n          }\n        </Layout>\n        \n      </Layout>\n    </div>\n  );\n};\n\nexport default AppLayout;\n","import AppLayout from './AppLayout';\nimport AppStore from './stores/AppStore';\nimport './styles/AntDThemeConfig.less';\nimport './styles/App.scss';\n\nconst App = () => {\n  return (\n    <AppStore>\n      <AppLayout />\n    </AppStore>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}