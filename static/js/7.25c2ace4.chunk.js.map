{"version":3,"sources":["components/ui/TitledCard.js","components/entity_views/GameStatePropInspectorView.js","components/play_mode_modules/GameStatePropsInspector.js","components/play_mode_modules/SequenceActionsRunner.js","controllers/PlayInteractionsController.js","components/play_mode_modules/MapView.js","utils/ConversionUtils.js","components/play_mode_modules/StoryProgress.js","PlayTestAppLayout.js","PlayTestApp.js"],"names":["Title","Typography","TitledCard","title","titleStyle","children","props","level","style","whiteSpace","overflow","textOverflow","Panel","Collapse","Item","Descriptions","GameStatePropInspectorView","gsProp","useState","extraOpen","setExtraOpen","updated","setUpdated","useEffect","pingUpdated","value","setTimeout","formatValue","type","undefined","endsWith","className","name","fontSize","marginBottom","borderColor","color","position","top","right","cursor","onClick","MinusCircleFilled","PlusCircleFilled","fontWeight","defaultActiveKey","activeKey","ghost","header","showArrow","column","size","label","prev_value","GameStatePropsInspector","livePropsArray","useLiveQuery","AppDataFetchController","fetchPlayGameStateProps","flex","bodyStyle","display","flexDirection","height","paddingTop","map","game_state_prop_id","SequenceActionsRunner","PlayInteractionsController","dispatch","db","transaction","play_game_state_props","chapters","acts","a","where","anyOf","first","currentChapter","currentAct","equals","chapter","id","count","actsCount","update","then","result","catch","error","console","log","Promise","reject","MapView","simulateNextAct","ConversionUtils","arrayValue","keyName","reduce","acc","cur","i","Text","StoryProgress","chaptersCount","setChaptersCount","setActsCount","setChapter","act","setAct","liveProps","arrayToObject","chapterByOrder","chapterObj","actsByChapterCount","gutter","span","alignItems","percent","format","strokeColor","PlayTestAppLayout","useContext","AppContext","state","AppLogicController","checkDatabaseOk","checkStoryLoaded","initialCheckDone","globalLoading","src","logo","alt","databaseLoadError","textAlign","storyLoadError","storyErrorMessage","PlayTestApp","AppStore"],"mappings":"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","file":"static/js/7.25c2ace4.chunk.js","sourcesContent":["import { Card, Typography } from 'antd';\nconst { Title } = Typography;\n\nconst TitledCard = ({ title, titleStyle = {}, children, ...props }) => {\n  return (\n    <Card {...props}>\n      <Title level={5} style={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', ...titleStyle}}>{title}</Title>\n      {children}\n    </Card>\n  );\n};\n\nexport default TitledCard;\n","import { useState, useEffect } from 'react';\nimport TitledCard from '../ui/TitledCard';\nimport { PlusCircleFilled, MinusCircleFilled } from '@ant-design/icons';\nimport { Collapse, Descriptions } from 'antd';\nimport '../../styles/components/entity_views/GameStatePropInspectorView.scss';\n\nconst { Panel } = Collapse;\nconst { Item } = Descriptions;\n\nconst GameStatePropInspectorView = ({ gsProp, ...props }) => {\n  const [extraOpen, setExtraOpen] = useState(false);\n  const [updated, setUpdated] = useState(false);\n\n  useEffect(() => {\n    //console.log('||--gsProp.value CHANGE', gsProp.value);\n    pingUpdated();\n  }, [gsProp.value]);\n\n  const pingUpdated = () => {\n    setUpdated(true);\n    setTimeout(() => {\n      setUpdated(false);\n    }, 40);\n  };\n\n  const formatValue = (value, type) => {\n    if (value === null || value === undefined) return '--empty--';\n    let displayValue;\n    if (type.endsWith('arr')) {\n      displayValue = '[ ' + value + ' ]';\n    } else {\n      if(type === 'boolean') {\n        displayValue = value ? 'true' : 'false';\n      } else {\n        displayValue = value;\n      }\n    }\n    return displayValue;\n  }; \n\n  return (\n    <TitledCard \n      className={`game-state-prop-inspector-view ${updated ? 'updated' : ''}`}\n      title={gsProp.name} \n      titleStyle={{fontSize: 13}} \n      style={{marginBottom: 12, borderColor: gsProp.color}}\n      {...props}>\n      <div style={{position: 'absolute', top: 4, right: 4, cursor: 'pointer'}} onClick={() => { setExtraOpen(!extraOpen) }}>\n        {extraOpen ?\n          <MinusCircleFilled style={{ fontSize: '14px', color: '#FFF' }} />\n          :\n          <PlusCircleFilled style={{ fontSize: '14px', color: '#FFF' }} />\n        }\n      </div>\n      <p style={{fontWeight: 700, marginBottom: 6}}>{formatValue(gsProp.value, gsProp.type)}</p>\n      <Collapse defaultActiveKey={['-']} activeKey={[extraOpen ? '1' : '-']} ghost>\n        <Panel header={null} key=\"1\" showArrow={false}>\n          <Descriptions column={1} size=\"small\">\n            <Item label=\"Prev\">{formatValue(gsProp.prev_value, gsProp.type)}</Item>\n            <Item label=\"Type\">{gsProp.type}</Item>\n          </Descriptions>\n        </Panel>\n      </Collapse>\n    </TitledCard>\n  );\n};\n\nexport default GameStatePropInspectorView;\n","import { useState } from 'react';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport AppDataFetchController from '../../controllers/AppDataFetchController';\nimport TitledCard from '../ui/TitledCard';\nimport GameStatePropInspectorView from '../entity_views/GameStatePropInspectorView';\n\nconst GameStatePropsInspector = () => {\n\n  const livePropsArray = useLiveQuery(AppDataFetchController.fetchPlayGameStateProps(null, true));\n\n  // useEffect(() => {\n  //   console.log('||--livePropsArray', livePropsArray);\n  // }, [livePropsArray]);\n\n  return (\n    <TitledCard style={{flex: 1}} title={'Properties'} bodyStyle={{display: 'flex', flexDirection: 'column', height: '100%'}}>\n      <div style={{overflow: 'auto', flex: 1}}>\n        <div style={{height: 0, paddingTop: 10}}>\n          { livePropsArray !== undefined && livePropsArray.map(gsProp =>\n            <GameStatePropInspectorView \n              key={gsProp.game_state_prop_id} \n              gsProp={gsProp}\n            />\n            )\n          }\n        </div>\n      </div>\n    </TitledCard>\n  );\n};\n\nexport default GameStatePropsInspector;\n","import { Card } from 'antd';\n\nconst SequenceActionsRunner = () => {\n\n  return (\n    <Card style={{flex: 1}}>\n      <p>Sequence actions runner (Full H)</p>\n      <p>Card content</p>\n      <p>Card content</p>\n    </Card>\n  );\n};\n\nexport default SequenceActionsRunner;\n","import db from '../db/AppDatabase';\n\n//Controls data operations in play mode\nclass PlayInteractionsController {\n\n  static async simulateNextAct(dispatch) {\n    return db.transaction('rw', db.play_game_state_props, db.chapters, db.acts, async () => {\n      const currentChapter = await db.play_game_state_props.where('name').anyOf('currentChapter').first();\n      const currentAct = await db.play_game_state_props.where('name').anyOf('currentAct').first();\n      const chapter = await db.chapters.where('order').equals(currentChapter.value).first();\n      const actsCount = await db.acts.where('chapter_id').equals(chapter.id).count();\n\n      //console.log('||--simulateNextAct', currentChapter, currentAct, chapter, actsCount);\n\n      if((currentAct.value + 1) > actsCount) { //next chapter\n        await db.play_game_state_props.update(currentChapter.game_state_prop_id, {'value': currentChapter.value + 1});\n        await db.play_game_state_props.update(currentAct.game_state_prop_id, {'value': 1});\n      } else { //increment act\n        await db.play_game_state_props.update(currentAct.game_state_prop_id, {'value': currentAct.value + 1});\n      }\n\n\n    }).then(result => {\n      \n    }).catch(error => {\n      console.log('||--FAIL', error);\n      //return reject to allow catch chain\n      return Promise.reject(error);\n    });\n  }\n\n}\n\nexport default PlayInteractionsController;","import { Card, Typography, Button } from 'antd';\nimport PlayInteractionsController from '../../controllers/PlayInteractionsController';\nconst { Title } = Typography;\n\nconst MapView = () => {\n\n  return (\n    <Card style={{flex: 1, marginBottom: 12}}>\n      <Title level={5}>Map</Title>\n      <p>Map (flexible)</p>\n      <p>Card content</p>\n      <p>Card content</p>\n      <Button onClick={() => { PlayInteractionsController.simulateNextAct() }}>\n        Simulate Next Act\n      </Button>\n    </Card>\n  );\n};\n\nexport default MapView;\n","\nclass ConversionUtils {\n  static arrayToObject(arrayValue, keyName) {\n    return arrayValue && arrayValue.reduce((acc, cur, i) => { acc[cur[keyName]] = cur; return acc; }, {});\n  }\n\n}\n\nexport default ConversionUtils;","import { useState, useEffect } from 'react';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport { Card, Typography, Row, Col, Progress } from 'antd';\nimport AppDataFetchController from '../../controllers/AppDataFetchController';\nimport ConversionUtils from '../../utils/ConversionUtils';\nconst { Title, Text } = Typography;\n\nconst StoryProgress = () => {\n  const [chaptersCount, setChaptersCount] = useState(0);\n  const [actsCount, setActsCount] = useState(0);\n  const [chapter, setChapter] = useState(0);\n  const [act, setAct] = useState(0);\n\n  AppDataFetchController.chaptersCount().then(count => { setChaptersCount(count) }).catch(error => { });\n  const livePropsArray = useLiveQuery(AppDataFetchController.fetchPlayGameStateProps(['currentChapter', 'currentAct'], true));\n  const liveProps = ConversionUtils.arrayToObject(livePropsArray, 'name');\n\n  useEffect(() => {\n    if(liveProps && liveProps.currentChapter !== undefined) {\n      if(liveProps.currentChapter.value !== chapter) {\n        setChapter(liveProps.currentChapter.value);\n      }\n    }\n    if(liveProps && liveProps.currentAct !== undefined) {\n      if(liveProps.currentAct.value !== act) {\n        setAct(liveProps.currentAct.value);\n      }\n    }\n  }, [liveProps]); // eslint-disable-line\n\n  useEffect(() => {\n    AppDataFetchController.chapterByOrder(chapter).then(chapterObj => {\n      AppDataFetchController.actsByChapterCount(chapterObj.id).then(count => { setActsCount(count) }).catch(error => { });\n    }).catch(error => { });\n  }, [chapter]);\n\n  return (\n    <Card>\n      <Title level={5}>Progress</Title>\n      <Row gutter={[8, 8]}>\n        <Col span={24} style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n          <Progress percent={(chapter/chaptersCount)*100} format={percent => `${chapter}/${chaptersCount}`} strokeColor='#fa541c' />\n          <Text type=\"secondary\">Chapter</Text>\n        </Col>\n        <Col span={24} style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n          <Progress percent={(act/actsCount)*100} format={percent => `${act}/${actsCount}`} strokeColor='#fa541c' />\n          <Text type=\"secondary\">Act</Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n\nexport default StoryProgress;","//-- Components --//\nimport React, { useEffect, useContext } from 'react';\nimport { Layout, Typography, Spin, Row, Col } from 'antd';\n//-- Context --//\nimport { AppContext } from './stores/AppStore';\n//-- Controller --//\nimport AppLogicController from './controllers/AppLogicController';\n//-- Modules --//\nimport GameStatePropsInspector from './components/play_mode_modules/GameStatePropsInspector';\nimport SequenceActionsRunner from './components/play_mode_modules/SequenceActionsRunner';\nimport MapView from './components/play_mode_modules/MapView';\nimport StoryProgress from './components/play_mode_modules/StoryProgress';\n//-- Images --//\nimport logo from './images/logo192.png';\n\n\nconst { Text } = Typography;\n\nconst PlayTestAppLayout = () => {\n  const [state, dispatch] = useContext(AppContext);\n\n  useEffect(() => {\n    //Mount\n    AppLogicController.checkDatabaseOk(dispatch);\n    AppLogicController.checkStoryLoaded(dispatch);\n\n  }, []); // eslint-disable-line\n\n  if(!state.initialCheckDone || state.globalLoading) {\n    return (\n      <div className='play-test-app loading'>\n        <img src={logo} alt='RPG Story Playtesting' />\n        <Spin size='large' />\n      </div>\n    );\n    \n  }\n\n  if(state.databaseLoadError) {\n    return (\n      <Text style={{display: 'block', textAlign: 'center', paddingTop: 50}}>\n        This application requires IndexedDB. Please use a browser that supports this feature.\n      </Text>\n    );\n  }\n\n  if(state.storyLoadError) {\n    return (\n      <Text style={{display: 'block', textAlign: 'center', paddingTop: 50}}>\n        We were unable to load your story, please go back to app editor and make sure your file/url contains a RPG-SP story.<br />\n        {state.storyErrorMessage !== null && 'Error info: ' + state.storyErrorMessage}\n      </Text>\n    );\n  }\n\n  // let currentPage = null;\n  // if(state.storyLoaded) {\n  //   switch(state.page) {\n  //     case 'PLAYMODE': currentPage = PlayModePage; break;\n  //     case 'STORY': currentPage = StoryPage; break;\n  //     case 'CONFIG': currentPage = ConfigPage; break;\n  //     default: currentPage = ConfigPage; break;\n  //   }\n  // }\n  \n\n  return (\n    <div className='play-test-app'>\n      <Layout className='app-layout'>  \n        <Row gutter={[16, 16]} className='layout-row'>\n          <Col span={6} className='layout-col col-l'>\n            <GameStatePropsInspector />\n          </Col>\n          <Col span={11} className='layout-col col-c'>\n            <SequenceActionsRunner />\n          </Col>\n          <Col span={7} className='layout-col col-r'>\n            <MapView />\n            <StoryProgress />\n          </Col>\n        </Row>\n      </Layout>\n    </div>\n  );\n};\n\nexport default PlayTestAppLayout;\n","import PlayTestAppLayout from './PlayTestAppLayout';\nimport AppStore from './stores/AppStore';\nimport './styles/AntDDarkThemeConfig.less';\nimport './styles/PlayTestApp.scss';\n\nconst PlayTestApp = () => {\n  return (\n    <AppStore>\n      <PlayTestAppLayout />\n    </AppStore>\n  );\n};\n\nexport default PlayTestApp;\n"],"sourceRoot":""}